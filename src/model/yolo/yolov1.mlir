#loc = loc(unknown)
module @yolov1 attributes {module.FLOPs = 43289280 : i64, module.chip = "ALL", module.platform = "ONNX", module.state = "TOP_F32", module.top_run_mode = "STATIC", module.weight_file = "yolov1_top_f32_all_weight.npz"} {
  func.func @main(%arg0: tensor<1x3x96x96xf32> loc(unknown)) -> (tensor<1x12x12x10xf32>, tensor<1x12x12x2xf32>, tensor<1x12x12x12xf32>) {
    %0 = "top.None"() : () -> none loc(#loc)
    %1 = "top.Input"(%arg0) {channel_format = "nchw", do_preprocess = true, keep_aspect_ratio = false, keep_ratio_mode = "letterbox", mean = [0.000000e+00, 0.000000e+00, 0.000000e+00], pad_type = "center", pad_value = 0 : i64, pixel_format = "bgr", scale = [1.000000e+00, 1.000000e+00, 1.000000e+00]} : (tensor<1x3x96x96xf32>) -> tensor<1x3x96x96xf32> loc(#loc1)
    %2 = "top.Weight"() : () -> tensor<16x3x3x3xf32> loc(#loc2)
    %3 = "top.Conv"(%1, %2, %0) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x3x96x96xf32>, tensor<16x3x3x3xf32>, none) -> tensor<1x16x96x96xf32> loc(#loc3)
    %4 = "top.MaxPool"(%3) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x16x96x96xf32>) -> tensor<1x16x48x48xf32> loc(#loc4)
    %5 = "top.Weight"() : () -> tensor<16x16x3x3xf32> loc(#loc5)
    %6 = "top.Conv"(%4, %5, %0) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x48x48xf32>, tensor<16x16x3x3xf32>, none) -> tensor<1x16x48x48xf32> loc(#loc6)
    %7 = "top.MaxPool"(%6) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x16x48x48xf32>) -> tensor<1x16x24x24xf32> loc(#loc7)
    %8 = "top.Weight"() : () -> tensor<16x16x1x1xf32> loc(#loc8)
    %9 = "top.Conv"(%7, %8, %0) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x24x24xf32>, tensor<16x16x1x1xf32>, none) -> tensor<1x16x24x24xf32> loc(#loc9)
    %10 = "top.Weight"() : () -> tensor<32x16x3x3xf32> loc(#loc10)
    %11 = "top.Weight"() : () -> tensor<32xf32> loc(#loc11)
    %12 = "top.Conv"(%9, %10, %11) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x24x24xf32>, tensor<32x16x3x3xf32>, tensor<32xf32>) -> tensor<1x32x24x24xf32> loc(#loc12)
    %13 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc13)
    %14 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc14)
    %15 = "top.Scale"(%12, %13, %14) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x32x24x24xf32>, tensor<1x32xf32>, tensor<1x32xf32>) -> tensor<1x32x24x24xf32> loc(#loc15)
    %16 = "top.Weight"() : () -> tensor<16x32x1x1xf32> loc(#loc16)
    %17 = "top.Weight"() : () -> tensor<16xf32> loc(#loc17)
    %18 = "top.Conv"(%15, %16, %17) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x24x24xf32>, tensor<16x32x1x1xf32>, tensor<16xf32>) -> tensor<1x16x24x24xf32> loc(#loc18)
    %19 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc19)
    %20 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc20)
    %21 = "top.Scale"(%18, %19, %20) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x16x24x24xf32>, tensor<1x16xf32>, tensor<1x16xf32>) -> tensor<1x16x24x24xf32> loc(#loc21)
    %22 = "top.Weight"() : () -> tensor<32x16x3x3xf32> loc(#loc22)
    %23 = "top.Weight"() : () -> tensor<32xf32> loc(#loc23)
    %24 = "top.Conv"(%21, %22, %23) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x24x24xf32>, tensor<32x16x3x3xf32>, tensor<32xf32>) -> tensor<1x32x24x24xf32> loc(#loc24)
    %25 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc25)
    %26 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc26)
    %27 = "top.Scale"(%24, %25, %26) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x32x24x24xf32>, tensor<1x32xf32>, tensor<1x32xf32>) -> tensor<1x32x24x24xf32> loc(#loc27)
    %28 = "top.Weight"() : () -> tensor<16x32x1x1xf32> loc(#loc28)
    %29 = "top.Weight"() : () -> tensor<16xf32> loc(#loc29)
    %30 = "top.Conv"(%27, %28, %29) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x24x24xf32>, tensor<16x32x1x1xf32>, tensor<16xf32>) -> tensor<1x16x24x24xf32> loc(#loc30)
    %31 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc31)
    %32 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc32)
    %33 = "top.Scale"(%30, %31, %32) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x16x24x24xf32>, tensor<1x16xf32>, tensor<1x16xf32>) -> tensor<1x16x24x24xf32> loc(#loc33)
    %34 = "top.Weight"() : () -> tensor<32x16x3x3xf32> loc(#loc34)
    %35 = "top.Weight"() : () -> tensor<32xf32> loc(#loc35)
    %36 = "top.Conv"(%33, %34, %35) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x24x24xf32>, tensor<32x16x3x3xf32>, tensor<32xf32>) -> tensor<1x32x24x24xf32> loc(#loc36)
    %37 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc37)
    %38 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc38)
    %39 = "top.Scale"(%36, %37, %38) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x32x24x24xf32>, tensor<1x32xf32>, tensor<1x32xf32>) -> tensor<1x32x24x24xf32> loc(#loc39)
    %40 = "top.MaxPool"(%39) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x32x24x24xf32>) -> tensor<1x32x12x12xf32> loc(#loc40)
    %41 = "top.Weight"() : () -> tensor<16x32x1x1xf32> loc(#loc41)
    %42 = "top.Weight"() : () -> tensor<16xf32> loc(#loc42)
    %43 = "top.Conv"(%40, %41, %42) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x12x12xf32>, tensor<16x32x1x1xf32>, tensor<16xf32>) -> tensor<1x16x12x12xf32> loc(#loc43)
    %44 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc44)
    %45 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc45)
    %46 = "top.Scale"(%43, %44, %45) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x16x12x12xf32>, tensor<1x16xf32>, tensor<1x16xf32>) -> tensor<1x16x12x12xf32> loc(#loc46)
    %47 = "top.Weight"() : () -> tensor<32x16x3x3xf32> loc(#loc47)
    %48 = "top.Weight"() : () -> tensor<32xf32> loc(#loc48)
    %49 = "top.Conv"(%46, %47, %48) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x12x12xf32>, tensor<32x16x3x3xf32>, tensor<32xf32>) -> tensor<1x32x12x12xf32> loc(#loc49)
    %50 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc50)
    %51 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc51)
    %52 = "top.Scale"(%49, %50, %51) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x32x12x12xf32>, tensor<1x32xf32>, tensor<1x32xf32>) -> tensor<1x32x12x12xf32> loc(#loc52)
    %53 = "top.Weight"() : () -> tensor<16x32x1x1xf32> loc(#loc53)
    %54 = "top.Weight"() : () -> tensor<16xf32> loc(#loc54)
    %55 = "top.Conv"(%52, %53, %54) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x12x12xf32>, tensor<16x32x1x1xf32>, tensor<16xf32>) -> tensor<1x16x12x12xf32> loc(#loc55)
    %56 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc56)
    %57 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc57)
    %58 = "top.Scale"(%55, %56, %57) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x16x12x12xf32>, tensor<1x16xf32>, tensor<1x16xf32>) -> tensor<1x16x12x12xf32> loc(#loc58)
    %59 = "top.Weight"() : () -> tensor<32x16x3x3xf32> loc(#loc59)
    %60 = "top.Weight"() : () -> tensor<32xf32> loc(#loc60)
    %61 = "top.Conv"(%58, %59, %60) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x12x12xf32>, tensor<32x16x3x3xf32>, tensor<32xf32>) -> tensor<1x32x12x12xf32> loc(#loc61)
    %62 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc62)
    %63 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc63)
    %64 = "top.Scale"(%61, %62, %63) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x32x12x12xf32>, tensor<1x32xf32>, tensor<1x32xf32>) -> tensor<1x32x12x12xf32> loc(#loc64)
    %65 = "top.Weight"() : () -> tensor<16x32x1x1xf32> loc(#loc65)
    %66 = "top.Weight"() : () -> tensor<16xf32> loc(#loc66)
    %67 = "top.Conv"(%64, %65, %66) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x12x12xf32>, tensor<16x32x1x1xf32>, tensor<16xf32>) -> tensor<1x16x12x12xf32> loc(#loc67)
    %68 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc68)
    %69 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc69)
    %70 = "top.Scale"(%67, %68, %69) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x16x12x12xf32>, tensor<1x16xf32>, tensor<1x16xf32>) -> tensor<1x16x12x12xf32> loc(#loc70)
    %71 = "top.Weight"() : () -> tensor<32x16x3x3xf32> loc(#loc71)
    %72 = "top.Weight"() : () -> tensor<32xf32> loc(#loc72)
    %73 = "top.Conv"(%70, %71, %72) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x12x12xf32>, tensor<32x16x3x3xf32>, tensor<32xf32>) -> tensor<1x32x12x12xf32> loc(#loc73)
    %74 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc74)
    %75 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc75)
    %76 = "top.Scale"(%73, %74, %75) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x32x12x12xf32>, tensor<1x32xf32>, tensor<1x32xf32>) -> tensor<1x32x12x12xf32> loc(#loc76)
    %77 = "top.Weight"() : () -> tensor<16x32x1x1xf32> loc(#loc77)
    %78 = "top.Weight"() : () -> tensor<16xf32> loc(#loc78)
    %79 = "top.Conv"(%76, %77, %78) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x12x12xf32>, tensor<16x32x1x1xf32>, tensor<16xf32>) -> tensor<1x16x12x12xf32> loc(#loc79)
    %80 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc80)
    %81 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc81)
    %82 = "top.Scale"(%79, %80, %81) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x16x12x12xf32>, tensor<1x16xf32>, tensor<1x16xf32>) -> tensor<1x16x12x12xf32> loc(#loc82)
    %83 = "top.Weight"() : () -> tensor<32x16x3x3xf32> loc(#loc83)
    %84 = "top.Weight"() : () -> tensor<32xf32> loc(#loc84)
    %85 = "top.Conv"(%82, %83, %84) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x12x12xf32>, tensor<32x16x3x3xf32>, tensor<32xf32>) -> tensor<1x32x12x12xf32> loc(#loc85)
    %86 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc86)
    %87 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc87)
    %88 = "top.Scale"(%85, %86, %87) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x32x12x12xf32>, tensor<1x32xf32>, tensor<1x32xf32>) -> tensor<1x32x12x12xf32> loc(#loc88)
    %89 = "top.Weight"() : () -> tensor<32x32x1x1xf32> loc(#loc89)
    %90 = "top.Weight"() : () -> tensor<32xf32> loc(#loc90)
    %91 = "top.Conv"(%88, %89, %90) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x12x12xf32>, tensor<32x32x1x1xf32>, tensor<32xf32>) -> tensor<1x32x12x12xf32> loc(#loc91)
    %92 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc92)
    %93 = "top.Weight"() : () -> tensor<1x32xf32> loc(#loc93)
    %94 = "top.Scale"(%91, %92, %93) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x32x12x12xf32>, tensor<1x32xf32>, tensor<1x32xf32>) -> tensor<1x32x12x12xf32> loc(#loc94)
    %95 = "top.Weight"() : () -> tensor<16x32x1x1xf32> loc(#loc95)
    %96 = "top.Weight"() : () -> tensor<16xf32> loc(#loc96)
    %97 = "top.Conv"(%94, %95, %96) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x12x12xf32>, tensor<16x32x1x1xf32>, tensor<16xf32>) -> tensor<1x16x12x12xf32> loc(#loc97)
    %98 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc98)
    %99 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc99)
    %100 = "top.Scale"(%97, %98, %99) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x16x12x12xf32>, tensor<1x16xf32>, tensor<1x16xf32>) -> tensor<1x16x12x12xf32> loc(#loc100)
    %101 = "top.Weight"() : () -> tensor<16x16x1x1xf32> loc(#loc101)
    %102 = "top.Weight"() : () -> tensor<16xf32> loc(#loc102)
    %103 = "top.Conv"(%100, %101, %102) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x12x12xf32>, tensor<16x16x1x1xf32>, tensor<16xf32>) -> tensor<1x16x12x12xf32> loc(#loc103)
    %104 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc104)
    %105 = "top.Weight"() : () -> tensor<1x16xf32> loc(#loc105)
    %106 = "top.Scale"(%103, %104, %105) {do_relu = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x16x12x12xf32>, tensor<1x16xf32>, tensor<1x16xf32>) -> tensor<1x16x12x12xf32> loc(#loc106)
    %107 = "top.Weight"() : () -> tensor<12x16x1x1xf32> loc(#loc107)
    %108 = "top.Weight"() : () -> tensor<12xf32> loc(#loc108)
    %109 = "top.Conv"(%106, %107, %108) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x12x12xf32>, tensor<12x16x1x1xf32>, tensor<12xf32>) -> tensor<1x12x12x12xf32> loc(#loc109)
    %110 = "top.Permute"(%109) {order = [0, 2, 3, 1]} : (tensor<1x12x12x12xf32>) -> tensor<1x12x12x12xf32> loc(#loc110)
    %111 = "top.Slice"(%110, %0, %0, %0) {axes = [], ends = [1, 12, 12, 10], hasparamConvert_axes = [3], offset = [0, 0, 0, 0], steps = [1, 1, 1, 1]} : (tensor<1x12x12x12xf32>, none, none, none) -> tensor<1x12x12x10xf32> loc(#loc111)
    %112 = "top.Slice"(%110, %0, %0, %0) {axes = [], ends = [1, 12, 12, 2147482624], hasparamConvert_axes = [3], offset = [0, 0, 0, 10], steps = [1, 1, 1, 1]} : (tensor<1x12x12x12xf32>, none, none, none) -> tensor<1x12x12x2xf32> loc(#loc112)
    return %111, %112, %109 : tensor<1x12x12x10xf32>, tensor<1x12x12x2xf32>, tensor<1x12x12x12xf32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("input")
#loc2 = loc("onnx::Conv_671")
#loc3 = loc("/Conv_96/activate/Relu_output_0_Relu")
#loc4 = loc("/Conv_48/pool/MaxPool_output_0_MaxPool")
#loc5 = loc("onnx::Conv_675")
#loc6 = loc("/Conv_48/activate/Relu_output_0_Relu")
#loc7 = loc("/Conv_24_1/pool/MaxPool_output_0_MaxPool")
#loc8 = loc("onnx::Conv_679")
#loc9 = loc("/Conv_24_1/activate/Relu_output_0_Relu")
#loc10 = loc("onnx::Conv_683")
#loc11 = loc("onnx::Conv_684")
#loc12 = loc("/Conv_24_2/Conv_output_0_Conv")
#loc13 = loc("/Conv_24_2/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc14 = loc("/Conv_24_2/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc15 = loc("/Conv_24_2/activate/Relu_output_0_Relu")
#loc16 = loc("onnx::Conv_688")
#loc17 = loc("onnx::Conv_689")
#loc18 = loc("/Conv_24_3/Conv_output_0_Conv")
#loc19 = loc("/Conv_24_3/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc20 = loc("/Conv_24_3/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc21 = loc("/Conv_24_3/activate/Relu_output_0_Relu")
#loc22 = loc("onnx::Conv_693")
#loc23 = loc("onnx::Conv_694")
#loc24 = loc("/Conv_24_4/Conv_output_0_Conv")
#loc25 = loc("/Conv_24_4/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc26 = loc("/Conv_24_4/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc27 = loc("/Conv_24_4/activate/Relu_output_0_Relu")
#loc28 = loc("onnx::Conv_698")
#loc29 = loc("onnx::Conv_699")
#loc30 = loc("/Conv_24_5/Conv_output_0_Conv")
#loc31 = loc("/Conv_24_5/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc32 = loc("/Conv_24_5/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc33 = loc("/Conv_24_5/activate/Relu_output_0_Relu")
#loc34 = loc("onnx::Conv_703")
#loc35 = loc("onnx::Conv_704")
#loc36 = loc("/Conv_24_6/Conv_output_0_Conv")
#loc37 = loc("/Conv_24_6/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc38 = loc("/Conv_24_6/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc39 = loc("/Conv_24_6/activate/Relu_output_0_Relu")
#loc40 = loc("/Conv_12_1/pool/MaxPool_output_0_MaxPool")
#loc41 = loc("onnx::Conv_708")
#loc42 = loc("onnx::Conv_709")
#loc43 = loc("/Conv_12_1/Conv_output_0_Conv")
#loc44 = loc("/Conv_12_1/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc45 = loc("/Conv_12_1/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc46 = loc("/Conv_12_1/activate/Relu_output_0_Relu")
#loc47 = loc("onnx::Conv_713")
#loc48 = loc("onnx::Conv_714")
#loc49 = loc("/Conv_12_2/Conv_output_0_Conv")
#loc50 = loc("/Conv_12_2/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc51 = loc("/Conv_12_2/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc52 = loc("/Conv_12_2/activate/Relu_output_0_Relu")
#loc53 = loc("onnx::Conv_718")
#loc54 = loc("onnx::Conv_719")
#loc55 = loc("/Conv_12_3/Conv_output_0_Conv")
#loc56 = loc("/Conv_12_3/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc57 = loc("/Conv_12_3/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc58 = loc("/Conv_12_3/activate/Relu_output_0_Relu")
#loc59 = loc("onnx::Conv_723")
#loc60 = loc("onnx::Conv_724")
#loc61 = loc("/Conv_12_4/Conv_output_0_Conv")
#loc62 = loc("/Conv_12_4/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc63 = loc("/Conv_12_4/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc64 = loc("/Conv_12_4/activate/Relu_output_0_Relu")
#loc65 = loc("onnx::Conv_728")
#loc66 = loc("onnx::Conv_729")
#loc67 = loc("/Conv_12_5/Conv_output_0_Conv")
#loc68 = loc("/Conv_12_5/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc69 = loc("/Conv_12_5/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc70 = loc("/Conv_12_5/activate/Relu_output_0_Relu")
#loc71 = loc("onnx::Conv_733")
#loc72 = loc("onnx::Conv_734")
#loc73 = loc("/Conv_12_6/Conv_output_0_Conv")
#loc74 = loc("/Conv_12_6/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc75 = loc("/Conv_12_6/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc76 = loc("/Conv_12_6/activate/Relu_output_0_Relu")
#loc77 = loc("onnx::Conv_738")
#loc78 = loc("onnx::Conv_739")
#loc79 = loc("/Conv_7_1/Conv_output_0_Conv")
#loc80 = loc("/Conv_7_1/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc81 = loc("/Conv_7_1/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc82 = loc("/Conv_7_1/activate/Relu_output_0_Relu")
#loc83 = loc("onnx::Conv_743")
#loc84 = loc("onnx::Conv_744")
#loc85 = loc("/Conv_7_2/Conv_output_0_Conv")
#loc86 = loc("/Conv_7_2/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc87 = loc("/Conv_7_2/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc88 = loc("/Conv_7_2/activate/Relu_output_0_Relu")
#loc89 = loc("onnx::Conv_748")
#loc90 = loc("onnx::Conv_749")
#loc91 = loc("/Conv_Res_1/Conv_output_0_Conv")
#loc92 = loc("/Conv_Res_1/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc93 = loc("/Conv_Res_1/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc94 = loc("/Conv_Res_1/activate/Relu_output_0_Relu")
#loc95 = loc("onnx::Conv_753")
#loc96 = loc("onnx::Conv_754")
#loc97 = loc("/Conv_Res_2/Conv_output_0_Conv")
#loc98 = loc("/Conv_Res_2/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc99 = loc("/Conv_Res_2/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc100 = loc("/Conv_Res_2/activate/Relu_output_0_Relu")
#loc101 = loc("onnx::Conv_758")
#loc102 = loc("onnx::Conv_759")
#loc103 = loc("/Conv_Res_3/Conv_output_0_Conv")
#loc104 = loc("/Conv_Res_3/bn/BatchNormalization_output_0_BatchNormalization_scale")
#loc105 = loc("/Conv_Res_3/bn/BatchNormalization_output_0_BatchNormalization_bias")
#loc106 = loc("/Conv_Res_3/activate/Relu_output_0_Relu")
#loc107 = loc("onnx::Conv_760")
#loc108 = loc("onnx::Conv_761")
#loc109 = loc("/Conv_Res_4/Conv_output_0_Conv")
#loc110 = loc("/Transpose_output_0_Transpose")
#loc111 = loc("output_Slice")
#loc112 = loc("667_Slice")

