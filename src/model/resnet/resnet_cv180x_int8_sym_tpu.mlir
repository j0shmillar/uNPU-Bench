#loc = loc(unknown)
module @resnet attributes {module.FLOPs = 37207396 : i64, module.addr_mode = "basic", module.asymmetric = false, module.chip = "cv180x", module.cores = 1 : i64, module.devices = 1 : i64, module.high_precision = false, module.mode = "INT8", module.platform = "ONNX", module.q_group_size = 0 : i64, module.state = "TPU_LOWERED", module.top_run_mode = "STATIC", module.weight_file = "resnet_tpu_lowered_cv180x_int8_sym_weight.npz"} {
  func.func @main(%arg0: tensor<1x3x32x32xf32> loc(unknown)) -> tensor<1x100xf32> {
    %0 = "top.Input"(%arg0) {channel_format = "nchw", do_preprocess = true, keep_aspect_ratio = false, keep_ratio_mode = "letterbox", mean = [0.000000e+00, 0.000000e+00, 0.000000e+00], pad_type = "center", pad_value = 0 : i64, pixel_format = "bgr", scale = [1.000000e+00, 1.000000e+00, 1.000000e+00]} : (tensor<1x3x32x32xf32>) -> tensor<1x3x32x32x!quant.calibrated<f32<-3.6947594000000001:3.6947594000000001>>> loc(#loc1)
    %1 = "tpu.GenericCpu"(%0) {cpu_op_name = "quant", param = {from = "FP32", scale = 34.3730087 : f32, to = "INT8"}} : (tensor<1x3x32x32x!quant.calibrated<f32<-3.6947594000000001:3.6947594000000001>>>) -> tensor<1x3x32x32x!quant.uniform<i8:f32, 0.029092593700787404>> loc(#loc2)
    %2 = "top.Weight"() : () -> tensor<16x3x3x3xsi8> loc(#loc3)
    %3 = "top.Weight"() : () -> tensor<1x16x1x1xi32> loc(#loc4)
    %4 = "tpu.Conv2D"(%1, %2, %3) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [1190872064, 1239239936, 1196889728, 1243258240, 1195902208, 1202197632, 1125458560, 2102802688, 1233097344, 1235459840, 1178692224, 2043573248, 1245930752, 1229693056, 1246080512, 1193062016], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [8, 8, 8, 8, 8, 8, 8, 9, 8, 8, 8, 9, 8, 8, 8, 8], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x3x32x32x!quant.uniform<i8:f32, 0.029092593700787404>>, tensor<16x3x3x3xsi8>, tensor<1x16x1x1xi32>) -> tensor<1x16x32x32x!quant.uniform<i8:f32, 0.019120925984251969>> loc(#loc5)
    %5 = "top.Weight"() : () -> tensor<20x16x3x3xsi8> loc(#loc6)
    %6 = "top.Weight"() : () -> tensor<1x20x1x1xi32> loc(#loc7)
    %7 = "tpu.Conv2D"(%4, %5, %6) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [2095187072, 2049780992, 2098490624, 2096056192, 2090740096, 2086777984, 2096976512, 2095083648, 2084104320, 2080630912, 2081157120, 2090692480, 2094206080, 2083021824, 2083693952, 2095003904, 2098047232, 2096569856, 2091534848, 2090020608], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x16x32x32x!quant.uniform<i8:f32, 0.019120925984251969>>, tensor<20x16x3x3xsi8>, tensor<1x20x1x1xi32>) -> tensor<1x20x32x32x!quant.uniform<i8:f32, 0.0064638629921259846>> loc(#loc8)
    %8 = "top.Weight"() : () -> tensor<20x20x3x3xsi8> loc(#loc9)
    %9 = "top.Weight"() : () -> tensor<1x20x1x1xi32> loc(#loc10)
    %10 = "tpu.Conv2D"(%7, %8, %9) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [1463334912, 1457084544, 1462556800, 1463153536, 1462117632, 1457738112, 1467532800, 1467934720, 1465681408, 1452736000, 1463639808, 1461311104, 1462353280, 1466691840, 1464833408, 1467665152, 1466527104, 1466128384, 1428649856, 1454985856], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x20x32x32x!quant.uniform<i8:f32, 0.0064638629921259846>>, tensor<20x20x3x3xsi8>, tensor<1x20x1x1xi32>) -> tensor<1x20x32x32x!quant.uniform<i8:f32, 0.0027935464566929131>> loc(#loc11)
    %11 = "tpu.Add"(%10, %7) {do_relu = false, multipliers = [52, 121], relu_limit = -1.000000e+00 : f64, rshifts = [7]} : (tensor<1x20x32x32x!quant.uniform<i8:f32, 0.0027935464566929131>>, tensor<1x20x32x32x!quant.uniform<i8:f32, 0.0064638629921259846>>) -> tensor<1x20x32x32x!quant.uniform<i8:f32, 0.0068373204724409449>> loc(#loc12)
    %12 = "top.Weight"() : () -> tensor<20x20x3x3xsi8> loc(#loc13)
    %13 = "top.Weight"() : () -> tensor<1x20x1x1xi32> loc(#loc14)
    %14 = "tpu.Conv2D"(%11, %12, %13) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [1468959744, 1469798144, 1474630784, 1474535040, 1472165888, 1476183296, 1466773888, 1448740608, 1475591936, 1471155840, 1472452736, 1477003648, 1469565184, 1475355264, 1474775296, 1474762112, 1472975616, 1473199360, 1456212352, 1473292416], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x20x32x32x!quant.uniform<i8:f32, 0.0068373204724409449>>, tensor<20x20x3x3xsi8>, tensor<1x20x1x1xi32>) -> tensor<1x20x32x32x!quant.uniform<i8:f32, 0.0029387393700787399>> loc(#loc15)
    %15 = "tpu.Pool2D"(%14) {count_include_pad = false, do_relu = false, first_round_mode = #tpu<round_mode HalfAwayFromZero>, is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], pool_mode = #tpu<pool_mode Max>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfAwayFromZero>, strides = [2, 2]} : (tensor<1x20x32x32x!quant.uniform<i8:f32, 0.0029387393700787399>>) -> tensor<1x20x16x16x!quant.uniform<i8:f32, 0.0029387393700787399>> loc(#loc16)
    %16 = "top.Weight"() : () -> tensor<20x20x3x3xsi8> loc(#loc17)
    %17 = "top.Weight"() : () -> tensor<1x20x1x1xi32> loc(#loc18)
    %18 = "tpu.Conv2D"(%15, %16, %17) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [1090526336, 1089617920, 1086780928, 1086772224, 1096433024, 1097003136, 1091641088, 1091202304, 1095835520, 1096413952, 1093783296, 1091004288, 1091535488, 1095662080, 1097033984, 1092855808, 1093239040, 1085874944, 1096263040, 1093561216], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x20x16x16x!quant.uniform<i8:f32, 0.0029387393700787399>>, tensor<20x20x3x3xsi8>, tensor<1x20x1x1xi32>) -> tensor<1x20x16x16x!quant.uniform<i8:f32, 0.001699015748031496>> loc(#loc19)
    %19 = "top.Weight"() : () -> tensor<20x20x3x3xsi8> loc(#loc20)
    %20 = "top.Weight"() : () -> tensor<1x20x1x1xi32> loc(#loc21)
    %21 = "tpu.Conv2D"(%18, %19, %20) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [2103659264, 2095408512, 2111678976, 2111949056, 2106013696, 2112360832, 2111613056, 2105629440, 2100525184, 2102328832, 2086739072, 2112242944, 2109681664, 2083176576, 2061650432, 2101838848, 2110138368, 2099088384, 2102633472, 2105439488], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x20x16x16x!quant.uniform<i8:f32, 0.001699015748031496>>, tensor<20x20x3x3xsi8>, tensor<1x20x1x1xi32>) -> tensor<1x20x16x16x!quant.uniform<i8:f32, 0.0010204944881889763>> loc(#loc22)
    %22 = "tpu.Add"(%21, %18) {do_relu = false, multipliers = [61, 102], relu_limit = -1.000000e+00 : f64, rshifts = [7]} : (tensor<1x20x16x16x!quant.uniform<i8:f32, 0.0010204944881889763>>, tensor<1x20x16x16x!quant.uniform<i8:f32, 0.001699015748031496>>) -> tensor<1x20x16x16x!quant.uniform<i8:f32, 0.0021226952755905512>> loc(#loc23)
    %23 = "top.Weight"() : () -> tensor<44x20x3x3xsi8> loc(#loc24)
    %24 = "top.Weight"() : () -> tensor<1x44x1x1xi32> loc(#loc25)
    %25 = "tpu.Conv2D"(%22, %23, %24) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [2007399424, 2006564608, 2006260480, 2011334272, 2017383680, 2014277504, 2016977792, 1999720832, 2018057344, 2019233536, 2000524800, 2013453952, 1991493888, 1994850560, 1992324608, 2005686272, 2016448768, 2009127424, 2015838592, 2019561856, 2012302208, 2017291520, 2014908416, 2008863232, 2012171776, 2005167744, 2010685184, 2016850560, 2004431104, 2003442176, 2015162496, 2010234112, 2013166976, 2018855424, 2003403904, 2008904704, 2019424128, 2016779776, 2018238208, 2004486144, 2001965952, 2004312960, 2001491328, 2008098304], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x20x16x16x!quant.uniform<i8:f32, 0.0021226952755905512>>, tensor<44x20x3x3xsi8>, tensor<1x44x1x1xi32>) -> tensor<1x44x16x16x!quant.uniform<i8:f32, 0.0013339629921259842>> loc(#loc26)
    %26 = "tpu.Pool2D"(%25) {count_include_pad = false, do_relu = false, first_round_mode = #tpu<round_mode HalfAwayFromZero>, is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], pool_mode = #tpu<pool_mode Max>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfAwayFromZero>, strides = [2, 2]} : (tensor<1x44x16x16x!quant.uniform<i8:f32, 0.0013339629921259842>>) -> tensor<1x44x8x8x!quant.uniform<i8:f32, 0.0013339629921259842>> loc(#loc27)
    %27 = "top.Weight"() : () -> tensor<48x44x3x3xsi8> loc(#loc28)
    %28 = "top.Weight"() : () -> tensor<1x48x1x1xi32> loc(#loc29)
    %29 = "tpu.Conv2D"(%26, %27, %28) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [1732838272, 1729219328, 1739173120, 1736748928, 1738769792, 1736827392, 1736519808, 1735446912, 1738986368, 1738025472, 1734321664, 1734470400, 1739240704, 1739480960, 1736655616, 1735744640, 1738165760, 1734351744, 1739918208, 1739166208, 1729257216, 1730851328, 1733489664, 1734418688, 1729948672, 1730161536, 1739596160, 1735567744, 1740260736, 1736739840, 1727776384, 1735540224, 1736998272, 1730459776, 1739281920, 1739850880, 1728256896, 1732030720, 1735001472, 1740004224, 1739696000, 1736031360, 1734961664, 1737785344, 1740052736, 1726668672, 1739624960, 1736870528], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x44x8x8x!quant.uniform<i8:f32, 0.0013339629921259842>>, tensor<48x44x3x3xsi8>, tensor<1x48x1x1xi32>) -> tensor<1x48x8x8x!quant.uniform<i8:f32, 6.5594094488188978E-4>> loc(#loc30)
    %30 = "top.Weight"() : () -> tensor<48x48x3x3xsi8> loc(#loc31)
    %31 = "top.Weight"() : () -> tensor<1x48x1x1xi32> loc(#loc32)
    %32 = "tpu.Conv2D"(%29, %30, %31) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [1106979712, 1109568000, 1108245120, 1108817792, 1108663168, 1107769856, 1107844480, 1105882752, 1109016192, 1109217024, 1102349952, 1105233024, 1107292032, 1108815616, 1108485632, 1106397440, 1108615424, 1105749248, 1100988160, 1108032256, 1106119680, 1107160192, 1109702016, 1108000640, 1104102272, 1109659392, 1107589376, 1109772288, 1101912448, 1109079040, 1107636224, 1104830592, 1106665216, 1100692096, 1108572160, 1106180864, 1107157888, 1106449792, 1105949568, 1107591424, 1108825216, 1108249856, 1103579520, 1101558528, 1108252032, 1106631168, 1100663040, 1108974464], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x48x8x8x!quant.uniform<i8:f32, 6.5594094488188978E-4>>, tensor<48x48x3x3xsi8>, tensor<1x48x1x1xi32>) -> tensor<1x48x8x8x!quant.uniform<i8:f32, 4.8420629921259843E-4>> loc(#loc33)
    %33 = "tpu.Add"(%32, %29) {do_relu = false, multipliers = [79, 107], relu_limit = -1.000000e+00 : f64, rshifts = [7]} : (tensor<1x48x8x8x!quant.uniform<i8:f32, 4.8420629921259843E-4>>, tensor<1x48x8x8x!quant.uniform<i8:f32, 6.5594094488188978E-4>>) -> tensor<1x48x8x8x!quant.uniform<i8:f32, 7.8246141732283474E-4>> loc(#loc34)
    %34 = "tpu.Pool2D"(%33) {count_include_pad = false, do_relu = false, first_round_mode = #tpu<round_mode HalfAwayFromZero>, is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], pool_mode = #tpu<pool_mode Max>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfAwayFromZero>, strides = [2, 2]} : (tensor<1x48x8x8x!quant.uniform<i8:f32, 7.8246141732283474E-4>>) -> tensor<1x48x4x4x!quant.uniform<i8:f32, 7.8246141732283474E-4>> loc(#loc35)
    %35 = "top.Weight"() : () -> tensor<96x48x3x3xsi8> loc(#loc36)
    %36 = "top.Weight"() : () -> tensor<1x96x1x1xi32> loc(#loc37)
    %37 = "tpu.Conv2D"(%34, %35, %36) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [1975156480, 1965010560, 1973086464, 1975029632, 1974161152, 1972285696, 1974373760, 1970466048, 1972232064, 1975741056, 1964441088, 1970974080, 1961118720, 1975664128, 1976023168, 1968935552, 1970550016, 1976006912, 1974810624, 1972271360, 1968699136, 1973881216, 1976267264, 1973899648, 1964746368, 1964346624, 1974946048, 1974545408, 1975528576, 1971976448, 1974064640, 1975397376, 1967056000, 1968732160, 1976024704, 1976105216, 1975468672, 1976280576, 1974961664, 1975225728, 1972553856, 1972157440, 1968361856, 1968640640, 1972641536, 1975939712, 1974373120, 1971170432, 1959503104, 1974477440, 1975990400, 1975870464, 1975610496, 1973961728, 1969182592, 1974263680, 1975371392, 1966807040, 1973303424, 1966191616, 1973883392, 1973507200, 1970551680, 1970695936, 1975773568, 1974933504, 1970706944, 1975240960, 1973324416, 1960609792, 1974622336, 1976312576, 1970396544, 1971367680, 1965215744, 1972250240, 1974991872, 1973061504, 1970301312, 1979139584, 1972430080, 1975734272, 1956494208, 1975134336, 1969421952, 1974823680, 1975265280, 1974848512, 1965137664, 1971686912, 1973832320, 1950736000, 1972270976, 1974227072, 1965393792, 1974757888], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x48x4x4x!quant.uniform<i8:f32, 7.8246141732283474E-4>>, tensor<96x48x3x3xsi8>, tensor<1x96x1x1xi32>) -> tensor<1x96x4x4x!quant.uniform<i8:f32, 6.4873228346456699E-4>> loc(#loc38)
    %38 = "tpu.Pool2D"(%37) {count_include_pad = false, do_relu = false, first_round_mode = #tpu<round_mode HalfAwayFromZero>, is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], pool_mode = #tpu<pool_mode Max>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfAwayFromZero>, strides = [2, 2]} : (tensor<1x96x4x4x!quant.uniform<i8:f32, 6.4873228346456699E-4>>) -> tensor<1x96x2x2x!quant.uniform<i8:f32, 6.4873228346456699E-4>> loc(#loc39)
    %39 = "top.Weight"() : () -> tensor<512x96x1x1xsi8> loc(#loc40)
    %40 = "top.Weight"() : () -> tensor<1x512x1x1xi32> loc(#loc41)
    %41 = "tpu.Conv2D"(%38, %39, %40) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], kernel_zp = 0 : i64, multiplier = [1139966976, 1129636352, 1097160448, 1130185856, 1137284224, 1142647296, 1136906880, 1137656064, 1141612288, 1142395008, 1140124032, 1127252224, 1125317376, 1141399168, 1141122560, 1136006912, 1134500480, 1125350400, 1140448896, 1130269824, 1137510016, 1134262912, 1138096256, 1119548160, 1140392704, 1140457472, 1138978688, 1127911552, 1141243264, 1140761472, 1140952448, 1142545920, 1098245760, 1115755520, 1128694016, 1139658880, 1136971264, 1125454208, 1130637056, 1136839168, 1141448320, 1132788224, 1141714432, 1142203392, 1140660608, 1116879232, 1141465728, 1114297088, 1130069248, 1124516096, 1127214336, 1128479104, 1132439936, 1139527296, 1140612736, 1127201024, 1140813056, 1140221056, 1134429440, 1141863040, 1139286784, 1140564864, 1134661376, 1123602048, 1134772608, 1142551296, 1113773824, 1134781696, 1122555392, 1138989696, 1128959488, 1142501248, 1137515008, 1141619968, 1136972288, 1141523968, 1139047680, 1124918656, 1142503936, 1110132096, 1128814720, 1141954176, 1135773952, 1141224832, 1140641920, 1135464448, 1131224576, 1134266624, 1139912832, 1113822464, 1129424512, 1130373888, 1129760640, 1105185408, 1133342720, 1142094976, 1139096704, 1113826944, 1140877696, 1136597632, 1141182848, 1141736448, 1137544576, 1131141632, 1130569088, 1121697536, 1140305920, 1142055552, 1142235136, 1125305984, 1132195456, 1106565504, 1137985792, 1131173504, 1134478464, 1114433536, 1134392448, 1128783360, 1134090752, 1138804864, 1142278144, 1137978368, 1142300672, 1139701120, 1140256512, 1141759104, 1136365056, 1108262784, 1135986304, 1142156160, 1132504960, 1116171648, 1140468096, 1139837824, 1128316288, 1135134464, 1141753472, 1140868608, 1127493376, 1141356416, 1133247360, 1141232384, 1119012736, 1137322496, 1135882112, 1137765120, 1137073152, 1142124160, 1109271424, 1086299392, 1142435584, 1110112512, 1140498560, 1136754048, 1138816896, 1137854720, 1102798592, 1138323328, 1127099520, 1141549696, 1132761728, 1139212544, 1111986048, 1127334272, 1138527488, 1138638464, 1133358464, 1132849408, 2110251008, 1135401728, 1142590720, 1135074432, 1141092352, 1140339328, 1127498112, 1124620416, 1110931840, 1129772800, 1123413248, 1140715904, 1132246528, 1138257920, 1125789952, 1131908096, 1138940544, 1141633792, 1088195968, 1136034304, 1124068736, 1127158144, 1134436352, 1135188864, 1126664704, 1100393088, 1116036992, 1136881024, 1140106496, 1122847744, 1138377344, 1136003200, 1124404352, 1138628480, 1138525824, 1137607424, 1128398720, 1132957184, 1087334656, 1116549760, 1135660288, 1138958720, 1135843584, 1139608832, 1138930688, 1138379520, 1124252800, 1113547392, 1138747520, 1121670400, 1126220032, 1142015360, 1102673152, 1142078464, 1082204160, 1112980480, 1139231488, 1137814144, 1140291072, 1139934080, 1100566016, 1104520192, 1140751488, 1141932672, 1134699264, 1142324352, 1132436480, 1139783680, 1142661760, 1115364096, 1126105728, 1126710272, 1133146240, 1141243264, 1133927424, 1137431424, 1141206144, 1140527744, 1140823296, 1128841728, 1116826624, 1114543616, 1135652224, 1129519360, 1125868544, 1131824000, 1129077120, 1136920064, 1116610432, 1140994816, 1142231424, 1136712960, 1140537472, 1136875776, 1141241856, 1141281280, 1116612864, 1133757568, 1137172096, 1111144320, 1141910528, 1133542912, 1140298368, 1130733184, 1141090048, 1127662080, 1132014336, 1122119168, 1129422336, 1128041088, 1138975360, 1124873472, 1129399680, 1127973120, 1141302528, 1124148096, 1139896704, 1104094464, 1141979520, 1111116032, 1139588992, 1132706688, 1138716800, 1142333312, 1138483456, 1131489280, 1141943808, 1142170112, 1118211072, 1131649280, 1129245824, 1140152576, 1139784576, 1136783360, 1123996160, 1140179200, 1128928128, 1115163904, 1136994176, 1101740800, 1142569344, 1133118208, 1137522688, 1138552576, 1128729984, 1142177792, 1140522496, 1139666688, 1133187456, 1133961472, 1134286976, 1120848128, 2143939968, 1133410944, 1137945728, 1130032384, 1106790144, 1097089920, 1134737024, 1120706432, 1074630656, 1134006656, 1141472896, 1140190720, 1134528640, 1141114880, 1127856768, 1111443584, 1110986624, 1131679744, 1114595200, 1140467200, 1132823424, 1126847360, 1141229184, 1141601280, 1142630912, 1134936320, 2133182208, 1130028672, 1125774336, 1133282432, 1140528000, 1134044032, 1122276992, 1123579392, 1121226368, 1135726592, 1139220224, 1139173760, 1136086016, 1139597440, 1142308224, 1141984256, 1132291072, 1135485952, 1132650240, 1126101760, 1137329024, 1142183040, 1131213952, 1141500800, 1136869248, 1112143872, 1139245696, 1123253888, 1122301056, 1138520960, 1142591872, 1139641088, 1132668800, 1133925888, 1143144960, 1122871808, 1139719424, 1131982464, 1139485440, 1137458304, 1127077760, 1134564736, 1124759552, 1127188480, 1129438464, 1118200064, 1138528384, 1128676096, 1141666048, 1142407296, 1142281344, 1142192256, 1125270400, 1135005440, 1137827456, 1139718272, 1130225280, 1133698048, 1139203456, 1136308992, 1125075072, 1142394752, 1142557696, 1126095232, 1133766656, 1139656192, 1108912640, 1129832448, 1136243712, 1133904128, 1139728640, 1136283904, 1140572928, 1133426176, 1133306752, 1086389760, 1132241792, 1114998400, 1141401344, 1140828928, 1137158400, 1123394176, 1133557888, 1134162048, 1135820672, 1141068800, 1132378368, 1141319936, 1123958784, 1138311808, 1140683648, 1118398080, 1132025344, 1141307648, 1140365824, 1140610944, 1130522240, 1139565312, 1139972224, 1140377728, 1136797824, 1117671808, 1124850944, 1137752192, 1139879424, 1140827008, 1120352256, 1138278912, 1136853248, 1096427776, 1126051712, 1137128576, 1142218368, 1141825792, 1135249920, 1124111616, 1135872512, 1115789696, 1132635648, 1136867072, 1127511424, 1137431936, 1131351424, 1123841024, 1128428288, 1140363136, 1139872000, 1135341696, 1128471552, 1138730368, 1126123520, 1139061888, 1137850752, 1103696640, 1130227584, 1122879744, 1128551552, 1131751936, 1141388800, 1122044032, 1142151168, 1141382784, 1139542272, 1141862784, 1126125952, 1140945792, 1140288000, 1141206272, 1134811008, 1124210048, 1137968000, 1127888256, 1141589888, 1136428544, 1136909568, 1130922368, 1121897856, 1130132864, 1133114240, 1136022272, 1132900992, 1142318976, 1137939328, 1137721728, 1138141184, 1130005888], pads = [0, 0, 0, 0], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshiftstrides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x96x2x2x!quant.uniform<i8:f32, 6.4873228346456699E-4>>, tensor<512x96x1x1xsi8>, tensor<1x512x1x1xi32>) -> tensor<1x512x2x2x!quant.uniform<i8:f32, 9.8666062992125978E-4>> loc(#loc42)
    %42 = "top.Weight"() : () -> tensor<128x512x1x1xsi8> loc(#loc43)
    %43 = "top.Weight"() : () -> tensor<1x128x1x1xi32> loc(#loc44)
    %44 = "tpu.Conv2D"(%41, %42, %43) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], kernel_zp = 0 : i64, multiplier = [1355184640, 1349341184, 1351960320, 1349980800, 1349695488, 1344927488, 1343400448, 1349579904, 1351697408, 1351386368, 1350758016, 1352018432, 1351649536, 1348406912, 1352894336, 1350784000, 1354223488, 1352857600, 1351851904, 1338954624, 1345167488, 1353106432, 1352284544, 1351428736, 1350661248, 1347517568, 1347762560, 1361136640, 1356002944, 1349641088, 1350683264, 1348880512, 1358886016, 1351997312, 1349159936, 1347030272, 1348616832, 1352182272, 1374930176, 1351663488, 1347297408, 1346197120, 1349022976, 1352195840, 1349986688, 1343961600, 1349358208, 1351785344, 1350862848, 1352113280, 1349516928, 1353552640, 1349331200, 1351024768, 1348194688, 1351840512, 1351560064, 1350509440, 1351374592, 1350128640, 1353063552, 1347924864, 1352887552, 1350308992, 1353444096, 1349737472, 1352196992, 1349222144, 1351613184, 1350166144, 1346843392, 1350447744, 1351490176, 1352112128, 1347079680, 1351831040, 1352183936, 1347223680, 1349191424, 1348726272, 1351655552, 1348413056, 1351675136, 1344809472, 1355262720, 1351300480, 1349769088, 1349150208, 1350029184, 1350859520, 1348355584, 1350388608, 1350653312, 1348123904, 1352079872, 1374193792, 1350557312, 1349778560, 1347031168, 1350192384, 1350429184, 1350714368, 1349237888, 1357192448, 1350956032, 1351896448, 1348975232, 1354798976, 1344382976, 1348371072, 1343851392, 1353020800, 1350290176, 1354282496, 1349128960, 1343524352, 1350817920, 1352067840, 1349742848, 1352104448, 1348723328, 1351394816, 1344004352, 1347155584, 1353147264, 1345419136, 1355893120, 1344596480], pads = [0, 0, 0, 0], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x512x2x2x!quant.uniform<i8:f32, 9.8666062992125978E-4>>, tensor<128x512x1x1xsi8>, tensor<1x128x1x1xi32>) -> tensor<1x128x2x2x!quant.uniform<i8:f32, 5.4910236220472443E-4>> loc(#loc45)
    %45 = "tpu.Pool2D"(%44) {count_include_pad = false, do_relu = false, first_round_mode = #tpu<round_mode HalfAwayFromZero>, is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], pool_mode = #tpu<pool_mode Max>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfAwayFromZero>, strides = [2, 2]} : (tensor<1x128x2x2x!quant.uniform<i8:f32, 5.4910236220472443E-4>>) -> tensor<1x128x1x1x!quant.uniform<i8:f32, 5.4910236220472443E-4>> loc(#loc46)
    %46 = "top.Weight"() : () -> tensor<128x128x3x3xsi8> loc(#loc47)
    %47 = "top.Weight"() : () -> tensor<1x128x1x1xi32> loc(#loc48)
    %48 = "tpu.Conv2D"(%45, %46, %47) {coeff_merged = false, dilations = [1, 1], do_relu = true, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], kernel_zp = 0 : i64, multiplier = [1837068288, 1833668224, 1836963328, 1837637504, 1901345920, 1838458752, 1836803840, 1835102976, 1837205120, 1837279232, 1835230592, 1836193920, 1874321664, 1837283072, 1836273792, 1837452672, 1836667008, 1860611200, 1836264064, 1861316224, 1836547200, 1854124800, 1837631232, 1836207104, 1836379264, 1836834944, 1836171264, 1837397248, 1835934976, 1842743168, 1831485824, 1836079872, 1837337728, 1837149696, 1837000960, 1837155840, 1836750848, 1835464448, 1836295168, 1835287168, 1898921216, 1865604224, 1836450560, 1837637760, 1839758976, 1836367232, 1836227584, 1836489600, 1835367296, 1834849536, 1833239040, 1837557120, 1837592192, 1903015936, 1836189568, 1836609920, 1836870528, 1837370752, 1836790912, 1837409024, 1846723200, 1837842560, 1833393152, 1834477440, 1837517696, 1834736384, 1834291328, 1836964352, 1837402880, 1837723264, 1835801344, 1833665152, 1832701184, 1976178176, 1836678016, 1835846912, 1875007360, 1834081152, 1835959808, 1836538752, 1835107200, 1837319040, 1837255936, 1834240000, 1837020672, 1845528832, 1834734720, 1835564416, 1837236480, 1836899968, 1837053312, 1833489536, 1966331904, 1831936640, 1920842752, 1837479936, 1846477568, 1834034560, 1835439232, 1836898944, 1835282560, 1837533568, 1836828032, 1837644160, 1836894848, 1834229248, 1837301248, 1834464512, 1842066944, 1833403392, 1836883840, 1836216832, 1944219648, 1837362304, 1833601536, 1836906112, 1836294784, 1835218944, 1836030464, 1833765504, 1837560192, 1835370368, 1836214016, 1836280832, 1835587456, 1835403008, 1836464128, 1858346624], pads = [1, 1, 1, 1], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x128x1x1x!quant.uniform<i8:f32, 5.4910236220472443E-4>>, tensor<128x128x3x3xsi8>, tensor<1x128x1x1xi32>) -> tensor<1x128x1x1x!quant.uniform<i8:f32, 2.9980787401574804E-4>> loc(#loc49)
    %49 = "top.Weight"() : () -> tensor<100x128x1x1xsi8> loc(#loc50)
    %50 = "top.Weight"() : () -> tensor<1x100x1x1xi32> loc(#loc51)
    %51 = "tpu.Conv2D"(%48, %49, %50) {coeff_merged = false, dilations = [1, 1], do_relu = false, do_winograd = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], kernel_zp = 0 : i64, multiplier = [1753179776, 1769538432, 1742905984, 1740985856, 1759368192, 1788991488, 1755558016, 1748444544, 1749704320, 1746453632, 1759111680, 1744071040, 1739561472, 1747702400, 1741363072, 1751528448, 1756813824, 1760883456, 1747990784, 1757348352, 1776529024, 1692073344, 1751495424, 1735501952, 1755768832, 1754615808, 1764257280, 1742492288, 1750155904, 1752550272, 1738707328, 1765737344, 1749793664, 1719675008, 1789030528, 1767080960, 1768884352, 1759925376, 1771361536, 1781925248, 1738945920, 1731014528, 1765129088, 1756834560, 1747663360, 1751584256, 1720291584, 1745052160, 1727196544, 1745472896, 1752199936, 1758150528, 1757828992, 1750800896, 1761901184, 1731390592, 1704521728, 1771360512, 1751465856, 1758044672, 1743342464, 1721859456, 1758919680, 1793452032, 1730343168, 1742193536, 1762961152, 1758390400, 1767276032, 1765536896, 1749068544, 1754708096, 1760600064, 1763621760, 1726668160, 1756362496, 1756340352, 1733279872, 1757604992, 1772085120, 1774105856, 1744322944, 1735805312, 1758167040, 1757108096, 1734365056, 1747660032, 1723991424, 1735388416, 1715445120, 1761034752, 1757198208, 1747844864, 1758614144, 1754119808, 1743151616, 1762206976, 1695480704, 1745594752, 1759277696], pads = [0, 0, 0, 0], quant_mode = #tpu<rq_mode QDM>, relu_limit = -1.000000e+00 : f64, round_mode = #tpu<round_mode HalfUp>, rshift = [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], strides = [1, 1], support_compress = true, use_3ic_optimize = 0 : i64, weight_is_coeff = 1 : i64, with_bias = true} : (tensor<1x128x1x1x!quant.uniform<i8:f32, 2.9980787401574804E-4>>, tensor<100x128x1x1xsi8>, tensor<1x100x1x1xi32>) -> tensor<1x100x1x1x!quant.uniform<i8:f32, 5.1241574803149613E-4>> loc(#loc52)
    %52 = "tpu.Reshape"(%51) {flatten_start_dim = -1 : i64, shape = [1, -1]} : (tensor<1x100x1x1x!quant.uniform<i8:f32, 5.1241574803149613E-4>>) -> tensor<1x100x!quant.uniform<i8:f32, 5.1241574803149613E-4>> loc(#loc53)
    %53 = "tpu.Cast"(%52) {round_mode = #tpu<round_mode HalfAwayFromZero>, with_scale = true} : (tensor<1x100x!quant.uniform<i8:f32, 5.1241574803149613E-4>>) -> tensor<1x100xf32> loc(#loc54)
    return %53 : tensor<1x100xf32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("input")
#loc2 = loc("input/conv1/activate/Relu_output_0_Relu_si8")
#loc3 = loc("/conv1/activate/Relu_output_0_Relu_filter_i8")
#loc4 = loc("/conv1/activate/Relu_output_0_Relu_bias_int32")
#loc5 = loc("/conv1/activate/Relu_output_0_Relu")
#loc6 = loc("/conv2/activate/Relu_output_0_Relu_filter_i8")
#loc7 = loc("/conv2/activate/Relu_output_0_Relu_bias_int32")
#loc8 = loc("/conv2/activate/Relu_output_0_Relu")
#loc9 = loc("/conv3/activate/Relu_output_0_Relu_filter_i8")
#loc10 = loc("/conv3/activate/Relu_output_0_Relu_bias_int32")
#loc11 = loc("/conv3/activate/Relu_output_0_Relu")
#loc12 = loc("/resid1/Add_output_0_Add")
#loc13 = loc("/conv4/activate/Relu_output_0_Relu_filter_i8")
#loc14 = loc("/conv4/activate/Relu_output_0_Relu_bias_int32")
#loc15 = loc("/conv4/activate/Relu_output_0_Relu")
#loc16 = loc("/conv5/pool/MaxPool_output_0_MaxPool")
#loc17 = loc("/conv5/activate/Relu_output_0_Relu_filter_i8")
#loc18 = loc("/conv5/activate/Relu_output_0_Relu_bias_int32")
#loc19 = loc("/conv5/activate/Relu_output_0_Relu")
#loc20 = loc("/conv6/activate/Relu_output_0_Relu_filter_i8")
#loc21 = loc("/conv6/activate/Relu_output_0_Relu_bias_int32")
#loc22 = loc("/conv6/activate/Relu_output_0_Relu")
#loc23 = loc("/resid2/Add_output_0_Add")
#loc24 = loc("/conv7/activate/Relu_output_0_Relu_filter_i8")
#loc25 = loc("/conv7/activate/Relu_output_0_Relu_bias_int32")
#loc26 = loc("/conv7/activate/Relu_output_0_Relu")
#loc27 = loc("/conv8/pool/MaxPool_output_0_MaxPool")
#loc28 = loc("/conv8/activate/Relu_output_0_Relu_filter_i8")
#loc29 = loc("/conv8/activate/Relu_output_0_Relu_bias_int32")
#loc30 = loc("/conv8/activate/Relu_output_0_Relu")
#loc31 = loc("/conv9/activate/Relu_output_0_Relu_filter_i8")
#loc32 = loc("/conv9/activate/Relu_output_0_Relu_bias_int32")
#loc33 = loc("/conv9/activate/Relu_output_0_Relu")
#loc34 = loc("/resid3/Add_output_0_Add")
#loc35 = loc("/conv10/pool/MaxPool_output_0_MaxPool")
#loc36 = loc("/conv10/activate/Relu_output_0_Relu_filter_i8")
#loc37 = loc("/conv10/activate/Relu_output_0_Relu_bias_int32")
#loc38 = loc("/conv10/activate/Relu_output_0_Relu")
#loc39 = loc("/conv11/pool/MaxPool_output_0_MaxPool")
#loc40 = loc("/conv11/activate/Relu_output_0_Relu_filter_i8")
#loc41 = loc("/conv11/activate/Relu_output_0_Relu_bias_int32")
#loc42 = loc("/conv11/activate/Relu_output_0_Relu")
#loc43 = loc("/conv12/activate/Relu_output_0_Relu_filter_i8")
#loc44 = loc("/conv12/activate/Relu_output_0_Relu_bias_int32")
#loc45 = loc("/conv12/activate/Relu_output_0_Relu")
#loc46 = loc("/conv13/pool/MaxPool_output_0_MaxPool")
#loc47 = loc("/conv13/activate/Relu_output_0_Relu_filter_i8")
#loc48 = loc("/conv13/activate/Relu_output_0_Relu_bias_int32")
#loc49 = loc("/conv13/activate/Relu_output_0_Relu")
#loc50 = loc("/conv14/Conv_output_0_Conv_filter_i8")
#loc51 = loc("/conv14/Conv_output_0_Conv_bias_int32")
#loc52 = loc("/conv14/Conv_output_0_Conv")
#loc53 = loc("output_Reshape")
#loc54 = loc("output_Reshape_f32")

