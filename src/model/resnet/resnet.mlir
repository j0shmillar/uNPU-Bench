#loc = loc(unknown)
module @resnet attributes {module.FLOPs = 37207396 : i64, module.chip = "ALL", module.platform = "ONNX", module.state = "TOP_F32", module.top_run_mode = "STATIC", module.weight_file = "resnet_top_f32_all_weight.npz"} {
  func.func @main(%arg0: tensor<1x3x32x32xf32> loc(unknown)) -> tensor<1x100xf32> {
    %0 = "top.Input"(%arg0) {channel_format = "nchw", do_preprocess = true, keep_aspect_ratio = false, keep_ratio_mode = "letterbox", mean = [0.000000e+00, 0.000000e+00, 0.000000e+00], pad_type = "center", pad_value = 0 : i64, pixel_format = "bgr", scale = [1.000000e+00, 1.000000e+00, 1.000000e+00]} : (tensor<1x3x32x32xf32>) -> tensor<1x3x32x32xf32> loc(#loc1)
    %1 = "top.Weight"() : () -> tensor<16x3x3x3xf32> loc(#loc2)
    %2 = "top.Weight"() : () -> tensor<16xf32> loc(#loc3)
    %3 = "top.Conv"(%0, %1, %2) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x3x32x32xf32>, tensor<16x3x3x3xf32>, tensor<16xf32>) -> tensor<1x16x32x32xf32> loc(#loc4)
    %4 = "top.Weight"() : () -> tensor<20x16x3x3xf32> loc(#loc5)
    %5 = "top.Weight"() : () -> tensor<20xf32> loc(#loc6)
    %6 = "top.Conv"(%3, %4, %5) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x32x32xf32>, tensor<20x16x3x3xf32>, tensor<20xf32>) -> tensor<1x20x32x32xf32> loc(#loc7)
    %7 = "top.Weight"() : () -> tensor<20x20x3x3xf32> loc(#loc8)
    %8 = "top.Weight"() : () -> tensor<20xf32> loc(#loc9)
    %9 = "top.Conv"(%6, %7, %8) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x20x32x32xf32>, tensor<20x20x3x3xf32>, tensor<20xf32>) -> tensor<1x20x32x32xf32> loc(#loc10)
    %10 = "top.Add"(%9, %6) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x20x32x32xf32>, tensor<1x20x32x32xf32>) -> tensor<1x20x32x32xf32> loc(#loc11)
    %11 = "top.Weight"() : () -> tensor<20x20x3x3xf32> loc(#loc12)
    %12 = "top.Weight"() : () -> tensor<20xf32> loc(#loc13)
    %13 = "top.Conv"(%10, %11, %12) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x20x32x32xf32>, tensor<20x20x3x3xf32>, tensor<20xf32>) -> tensor<1x20x32x32xf32> loc(#loc14)
    %14 = "top.MaxPool"(%13) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x20x32x32xf32>) -> tensor<1x20x16x16xf32> loc(#loc15)
    %15 = "top.Weight"() : () -> tensor<20x20x3x3xf32> loc(#loc16)
    %16 = "top.Weight"() : () -> tensor<20xf32> loc(#loc17)
    %17 = "top.Conv"(%14, %15, %16) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x20x16x16xf32>, tensor<20x20x3x3xf32>, tensor<20xf32>) -> tensor<1x20x16x16xf32> loc(#loc18)
    %18 = "top.Weight"() : () -> tensor<20x20x3x3xf32> loc(#loc19)
    %19 = "top.Weight"() : () -> tensor<20xf32> loc(#loc20)
    %20 = "top.Conv"(%17, %18, %19) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x20x16x16xf32>, tensor<20x20x3x3xf32>, tensor<20xf32>) -> tensor<1x20x16x16xf32> loc(#loc21)
    %21 = "top.Add"(%20, %17) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x20x16x16xf32>, tensor<1x20x16x16xf32>) -> tensor<1x20x16x16xf32> loc(#loc22)
    %22 = "top.Weight"() : () -> tensor<44x20x3x3xf32> loc(#loc23)
    %23 = "top.Weight"() : () -> tensor<44xf32> loc(#loc24)
    %24 = "top.Conv"(%21, %22, %23) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x20x16x16xf32>, tensor<44x20x3x3xf32>, tensor<44xf32>) -> tensor<1x44x16x16xf32> loc(#loc25)
    %25 = "top.MaxPool"(%24) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x44x16x16xf32>) -> tensor<1x44x8x8xf32> loc(#loc26)
    %26 = "top.Weight"() : () -> tensor<48x44x3x3xf32> loc(#loc27)
    %27 = "top.Weight"() : () -> tensor<48xf32> loc(#loc28)
    %28 = "top.Conv"(%25, %26, %27) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x44x8x8xf32>, tensor<48x44x3x3xf32>, tensor<48xf32>) -> tensor<1x48x8x8xf32> loc(#loc29)
    %29 = "top.Weight"() : () -> tensor<48x48x3x3xf32> loc(#loc30)
    %30 = "top.Weight"() : () -> tensor<48xf32> loc(#loc31)
    %31 = "top.Conv"(%28, %29, %30) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x48x8x8xf32>, tensor<48x48x3x3xf32>, tensor<48xf32>) -> tensor<1x48x8x8xf32> loc(#loc32)
    %32 = "top.Add"(%31, %28) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x48x8x8xf32>, tensor<1x48x8x8xf32>) -> tensor<1x48x8x8xf32> loc(#loc33)
    %33 = "top.MaxPool"(%32) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x48x8x8xf32>) -> tensor<1x48x4x4xf32> loc(#loc34)
    %34 = "top.Weight"() : () -> tensor<96x48x3x3xf32> loc(#loc35)
    %35 = "top.Weight"() : () -> tensor<96xf32> loc(#loc36)
    %36 = "top.Conv"(%33, %34, %35) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x48x4x4xf32>, tensor<96x48x3x3xf32>, tensor<96xf32>) -> tensor<1x96x4x4xf32> loc(#loc37)
    %37 = "top.MaxPool"(%36) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x96x4x4xf32>) -> tensor<1x96x2x2xf32> loc(#loc38)
    %38 = "top.Weight"() : () -> tensor<512x96x1x1xf32> loc(#loc39)
    %39 = "top.Weight"() : () -> tensor<512xf32> loc(#loc40)
    %40 = "top.Conv"(%37, %38, %39) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x96x2x2xf32>, tensor<512x96x1x1xf32>, tensor<512xf32>) -> tensor<1x512x2x2xf32> loc(#loc41)
    %41 = "top.Weight"() : () -> tensor<128x512x1x1xf32> loc(#loc42)
    %42 = "top.Weight"() : () -> tensor<128xf32> loc(#loc43)
    %43 = "top.Conv"(%40, %41, %42) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x512x2x2xf32>, tensor<128x512x1x1xf32>, tensor<128xf32>) -> tensor<1x128x2x2xf32> loc(#loc44)
    %44 = "top.MaxPool"(%43) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x128x2x2xf32>) -> tensor<1x128x1x1xf32> loc(#loc45)
    %45 = "top.Weight"() : () -> tensor<128x128x3x3xf32> loc(#loc46)
    %46 = "top.Weight"() : () -> tensor<128xf32> loc(#loc47)
    %47 = "top.Conv"(%44, %45, %46) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x128x1x1xf32>, tensor<128x128x3x3xf32>, tensor<128xf32>) -> tensor<1x128x1x1xf32> loc(#loc48)
    %48 = "top.Weight"() : () -> tensor<100x128x1x1xf32> loc(#loc49)
    %49 = "top.Weight"() : () -> tensor<100xf32> loc(#loc50)
    %50 = "top.Conv"(%47, %48, %49) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x128x1x1xf32>, tensor<100x128x1x1xf32>, tensor<100xf32>) -> tensor<1x100x1x1xf32> loc(#loc51)
    %51 = "top.Reshape"(%50) {flatten_start_dim = -1 : i64, shape = [1, -1]} : (tensor<1x100x1x1xf32>) -> tensor<1x100xf32> loc(#loc52)
    return %51 : tensor<1x100xf32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("input")
#loc2 = loc("onnx::Conv_408")
#loc3 = loc("onnx::Conv_409")
#loc4 = loc("/conv1/activate/Relu_output_0_Relu")
#loc5 = loc("onnx::Conv_413")
#loc6 = loc("onnx::Conv_414")
#loc7 = loc("/conv2/activate/Relu_output_0_Relu")
#loc8 = loc("onnx::Conv_418")
#loc9 = loc("onnx::Conv_419")
#loc10 = loc("/conv3/activate/Relu_output_0_Relu")
#loc11 = loc("/resid1/Add_output_0_Add")
#loc12 = loc("onnx::Conv_423")
#loc13 = loc("onnx::Conv_424")
#loc14 = loc("/conv4/activate/Relu_output_0_Relu")
#loc15 = loc("/conv5/pool/MaxPool_output_0_MaxPool")
#loc16 = loc("onnx::Conv_428")
#loc17 = loc("onnx::Conv_429")
#loc18 = loc("/conv5/activate/Relu_output_0_Relu")
#loc19 = loc("onnx::Conv_433")
#loc20 = loc("onnx::Conv_434")
#loc21 = loc("/conv6/activate/Relu_output_0_Relu")
#loc22 = loc("/resid2/Add_output_0_Add")
#loc23 = loc("onnx::Conv_438")
#loc24 = loc("onnx::Conv_439")
#loc25 = loc("/conv7/activate/Relu_output_0_Relu")
#loc26 = loc("/conv8/pool/MaxPool_output_0_MaxPool")
#loc27 = loc("onnx::Conv_443")
#loc28 = loc("onnx::Conv_444")
#loc29 = loc("/conv8/activate/Relu_output_0_Relu")
#loc30 = loc("onnx::Conv_448")
#loc31 = loc("onnx::Conv_449")
#loc32 = loc("/conv9/activate/Relu_output_0_Relu")
#loc33 = loc("/resid3/Add_output_0_Add")
#loc34 = loc("/conv10/pool/MaxPool_output_0_MaxPool")
#loc35 = loc("onnx::Conv_453")
#loc36 = loc("onnx::Conv_454")
#loc37 = loc("/conv10/activate/Relu_output_0_Relu")
#loc38 = loc("/conv11/pool/MaxPool_output_0_MaxPool")
#loc39 = loc("onnx::Conv_458")
#loc40 = loc("onnx::Conv_459")
#loc41 = loc("/conv11/activate/Relu_output_0_Relu")
#loc42 = loc("onnx::Conv_463")
#loc43 = loc("onnx::Conv_464")
#loc44 = loc("/conv12/activate/Relu_output_0_Relu")
#loc45 = loc("/conv13/pool/MaxPool_output_0_MaxPool")
#loc46 = loc("onnx::Conv_468")
#loc47 = loc("onnx::Conv_469")
#loc48 = loc("/conv13/activate/Relu_output_0_Relu")
#loc49 = loc("onnx::Conv_470")
#loc50 = loc("onnx::Conv_471")
#loc51 = loc("/conv14/Conv_output_0_Conv")
#loc52 = loc("output_Reshape")

