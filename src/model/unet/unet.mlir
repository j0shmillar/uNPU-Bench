#loc = loc(unknown)
module @unet attributes {module.FLOPs = 67808000 : i64, module.chip = "ALL", module.platform = "ONNX", module.state = "TOP_F32", module.top_run_mode = "STATIC", module.weight_file = "unet_top_f32_all_weight.npz"} {
  func.func @main(%arg0: tensor<1x3x80x80xf32> loc(unknown)) -> tensor<1x1x80x80xf32> {
    %0 = "top.None"() : () -> none loc(#loc)
    %1 = "top.Input"(%arg0) {channel_format = "nchw", do_preprocess = true, keep_aspect_ratio = false, keep_ratio_mode = "letterbox", mean = [0.000000e+00, 0.000000e+00, 0.000000e+00], pad_type = "center", pad_value = 0 : i64, pixel_format = "bgr", scale = [1.000000e+00, 1.000000e+00, 1.000000e+00]} : (tensor<1x3x80x80xf32>) -> tensor<1x3x80x80xf32> loc(#loc1)
    %2 = "top.Weight"() : () -> tensor<4x3x3x3xf32> loc(#loc2)
    %3 = "top.Weight"() : () -> tensor<4xf32> loc(#loc3)
    %4 = "top.Conv"(%1, %2, %3) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x3x80x80xf32>, tensor<4x3x3x3xf32>, tensor<4xf32>) -> tensor<1x4x80x80xf32> loc(#loc4)
    %5 = "top.MaxPool"(%4) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x4x80x80xf32>) -> tensor<1x4x40x40xf32> loc(#loc5)
    %6 = "top.Weight"() : () -> tensor<8x4x3x3xf32> loc(#loc6)
    %7 = "top.Weight"() : () -> tensor<8xf32> loc(#loc7)
    %8 = "top.Conv"(%5, %6, %7) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x4x40x40xf32>, tensor<8x4x3x3xf32>, tensor<8xf32>) -> tensor<1x8x40x40xf32> loc(#loc8)
    %9 = "top.MaxPool"(%8) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x8x40x40xf32>) -> tensor<1x8x20x20xf32> loc(#loc9)
    %10 = "top.Weight"() : () -> tensor<32x8x3x3xf32> loc(#loc10)
    %11 = "top.Weight"() : () -> tensor<32xf32> loc(#loc11)
    %12 = "top.Conv"(%9, %10, %11) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x8x20x20xf32>, tensor<32x8x3x3xf32>, tensor<32xf32>) -> tensor<1x32x20x20xf32> loc(#loc12)
    %13 = "top.MaxPool"(%12) {count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<1x32x20x20xf32>) -> tensor<1x32x10x10xf32> loc(#loc13)
    %14 = "top.Weight"() : () -> tensor<64x32x3x3xf32> loc(#loc14)
    %15 = "top.Weight"() : () -> tensor<64xf32> loc(#loc15)
    %16 = "top.Conv"(%13, %14, %15) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x10x10xf32>, tensor<64x32x3x3xf32>, tensor<64xf32>) -> tensor<1x64x10x10xf32> loc(#loc16)
    %17 = "top.Interp"(%16, %0) {coord_mode = "half_pixel", mode = "linear", scale_h = 2.000000e+00 : f64, scale_w = 2.000000e+00 : f64} : (tensor<1x64x10x10xf32>, none) -> tensor<1x64x20x20xf32> loc(#loc17)
    %18 = "top.Weight"() : () -> tensor<32x64x3x3xf32> loc(#loc18)
    %19 = "top.Weight"() : () -> tensor<32xf32> loc(#loc19)
    %20 = "top.Conv"(%17, %18, %19) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x64x20x20xf32>, tensor<32x64x3x3xf32>, tensor<32xf32>) -> tensor<1x32x20x20xf32> loc(#loc20)
    %21 = "top.Concat"(%20, %12) {axis = 1 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<1x32x20x20xf32>, tensor<1x32x20x20xf32>) -> tensor<1x64x20x20xf32> loc(#loc21)
    %22 = "top.Weight"() : () -> tensor<32x64x3x3xf32> loc(#loc22)
    %23 = "top.Weight"() : () -> tensor<32xf32> loc(#loc23)
    %24 = "top.Conv"(%21, %22, %23) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x64x20x20xf32>, tensor<32x64x3x3xf32>, tensor<32xf32>) -> tensor<1x32x20x20xf32> loc(#loc24)
    %25 = "top.Interp"(%24, %0) {coord_mode = "half_pixel", mode = "linear", scale_h = 2.000000e+00 : f64, scale_w = 2.000000e+00 : f64} : (tensor<1x32x20x20xf32>, none) -> tensor<1x32x40x40xf32> loc(#loc25)
    %26 = "top.Weight"() : () -> tensor<8x32x3x3xf32> loc(#loc26)
    %27 = "top.Weight"() : () -> tensor<8xf32> loc(#loc27)
    %28 = "top.Conv"(%25, %26, %27) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x32x40x40xf32>, tensor<8x32x3x3xf32>, tensor<8xf32>) -> tensor<1x8x40x40xf32> loc(#loc28)
    %29 = "top.Concat"(%28, %8) {axis = 1 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<1x8x40x40xf32>, tensor<1x8x40x40xf32>) -> tensor<1x16x40x40xf32> loc(#loc29)
    %30 = "top.Weight"() : () -> tensor<8x16x3x3xf32> loc(#loc30)
    %31 = "top.Weight"() : () -> tensor<8xf32> loc(#loc31)
    %32 = "top.Conv"(%29, %30, %31) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x40x40xf32>, tensor<8x16x3x3xf32>, tensor<8xf32>) -> tensor<1x8x40x40xf32> loc(#loc32)
    %33 = "top.Interp"(%32, %0) {coord_mode = "half_pixel", mode = "linear", scale_h = 2.000000e+00 : f64, scale_w = 2.000000e+00 : f64} : (tensor<1x8x40x40xf32>, none) -> tensor<1x8x80x80xf32> loc(#loc33)
    %34 = "top.Weight"() : () -> tensor<4x8x3x3xf32> loc(#loc34)
    %35 = "top.Weight"() : () -> tensor<4xf32> loc(#loc35)
    %36 = "top.Conv"(%33, %34, %35) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x8x80x80xf32>, tensor<4x8x3x3xf32>, tensor<4xf32>) -> tensor<1x4x80x80xf32> loc(#loc36)
    %37 = "top.Concat"(%36, %4) {axis = 1 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<1x4x80x80xf32>, tensor<1x4x80x80xf32>) -> tensor<1x8x80x80xf32> loc(#loc37)
    %38 = "top.Weight"() : () -> tensor<16x8x3x3xf32> loc(#loc38)
    %39 = "top.Weight"() : () -> tensor<16xf32> loc(#loc39)
    %40 = "top.Conv"(%37, %38, %39) {dilations = [1, 1], do_relu = true, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x8x80x80xf32>, tensor<16x8x3x3xf32>, tensor<16xf32>) -> tensor<1x16x80x80xf32> loc(#loc40)
    %41 = "top.Weight"() : () -> tensor<1x16x1x1xf32> loc(#loc41)
    %42 = "top.Weight"() : () -> tensor<1xf32> loc(#loc42)
    %43 = "top.Conv"(%40, %41, %42) {dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x16x80x80xf32>, tensor<1x16x1x1xf32>, tensor<1xf32>) -> tensor<1x1x80x80xf32> loc(#loc43)
    return %43 : tensor<1x1x80x80xf32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("input")
#loc2 = loc("253")
#loc3 = loc("255")
#loc4 = loc("/enc1/activate/Relu_output_0_Relu")
#loc5 = loc("/enc2/pool/MaxPool_output_0_MaxPool")
#loc6 = loc("257")
#loc7 = loc("259")
#loc8 = loc("/enc2/activate/Relu_output_0_Relu")
#loc9 = loc("/enc3/pool/MaxPool_output_0_MaxPool")
#loc10 = loc("261")
#loc11 = loc("263")
#loc12 = loc("/enc3/activate/Relu_output_0_Relu")
#loc13 = loc("/bneck/pool/MaxPool_output_0_MaxPool")
#loc14 = loc("265")
#loc15 = loc("267")
#loc16 = loc("/bneck/activate/Relu_output_0_Relu")
#loc17 = loc("/Resize_output_0_Resize")
#loc18 = loc("269")
#loc19 = loc("271")
#loc20 = loc("/upconv3/activate/Relu_output_0_Relu")
#loc21 = loc("/Concat_output_0_Concat")
#loc22 = loc("273")
#loc23 = loc("275")
#loc24 = loc("/dec3/activate/Relu_output_0_Relu")
#loc25 = loc("/Resize_1_output_0_Resize")
#loc26 = loc("277")
#loc27 = loc("279")
#loc28 = loc("/upconv2/activate/Relu_output_0_Relu")
#loc29 = loc("/Concat_1_output_0_Concat")
#loc30 = loc("281")
#loc31 = loc("283")
#loc32 = loc("/dec2/activate/Relu_output_0_Relu")
#loc33 = loc("/Resize_2_output_0_Resize")
#loc34 = loc("285")
#loc35 = loc("287")
#loc36 = loc("/upconv1/activate/Relu_output_0_Relu")
#loc37 = loc("/Concat_2_output_0_Concat")
#loc38 = loc("289")
#loc39 = loc("291")
#loc40 = loc("/dec1/activate/Relu_output_0_Relu")
#loc41 = loc("293")
#loc42 = loc("295")
#loc43 = loc("/conv/Conv_output_0_Conv")

