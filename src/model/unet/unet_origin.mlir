#loc = loc(unknown)
module @unet attributes {module.chip = "ALL", module.platform = "ONNX", module.state = "TOP_F32", module.top_run_mode = "STATIC", module.weight_file = "unet_top_f32_all_origin_weight.npz"} {
  func.func @main(%arg0: tensor<1x3x80x80xf32> loc(unknown)) -> tensor<*xf32> {
    %0 = "top.None"() : () -> none loc(#loc)
    %1 = "top.Input"(%arg0) {channel_format = "nchw", do_preprocess = true, keep_aspect_ratio = false, keep_ratio_mode = "letterbox", mean = [0.000000e+00, 0.000000e+00, 0.000000e+00], pad_type = "center", pad_value = 0 : i64, pixel_format = "bgr", scale = [1.000000e+00, 1.000000e+00, 1.000000e+00]} : (tensor<1x3x80x80xf32>) -> tensor<1x3x80x80xf32> loc(#loc1)
    %2 = "top.Weight"() : () -> tensor<4x3x3x3xf32> loc(#loc2)
    %3 = "top.Weight"() : () -> tensor<4xf32> loc(#loc3)
    %4 = "top.Conv"(%1, %2, %3) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<1x3x80x80xf32>, tensor<4x3x3x3xf32>, tensor<4xf32>) -> tensor<*xf32> loc(#loc4)
    %5 = "top.Weight"() : () -> tensor<1xf32> loc(#loc5)
    %6 = "top.Mul"(%4, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc6)
    %7 = "top.Relu"(%6) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc7)
    %8 = "top.Weight"() : () -> tensor<1xf32> loc(#loc8)
    %9 = "top.Mul"(%7, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc9)
    %10 = "top.MaxPool"(%9) {auto_pad = "NOTSET", ceil_mode = false, count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc10)
    %11 = "top.Weight"() : () -> tensor<8x4x3x3xf32> loc(#loc11)
    %12 = "top.Weight"() : () -> tensor<8xf32> loc(#loc12)
    %13 = "top.Conv"(%10, %11, %12) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<8x4x3x3xf32>, tensor<8xf32>) -> tensor<*xf32> loc(#loc13)
    %14 = "top.Mul"(%13, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc14)
    %15 = "top.Relu"(%14) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc15)
    %16 = "top.Mul"(%15, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc16)
    %17 = "top.MaxPool"(%16) {auto_pad = "NOTSET", ceil_mode = false, count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc17)
    %18 = "top.Weight"() : () -> tensor<32x8x3x3xf32> loc(#loc18)
    %19 = "top.Weight"() : () -> tensor<32xf32> loc(#loc19)
    %20 = "top.Conv"(%17, %18, %19) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<32x8x3x3xf32>, tensor<32xf32>) -> tensor<*xf32> loc(#loc20)
    %21 = "top.Mul"(%20, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc21)
    %22 = "top.Relu"(%21) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc22)
    %23 = "top.Mul"(%22, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc23)
    %24 = "top.MaxPool"(%23) {auto_pad = "NOTSET", ceil_mode = false, count_include_pad = false, do_relu = false, first_round_mode = "HalfAwayFromZero", is_adaptive = false, keepdims = true, kernel_shape = [2, 2], pad_value = 0 : i64, pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero", strides = [2, 2]} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc24)
    %25 = "top.Weight"() : () -> tensor<64x32x3x3xf32> loc(#loc25)
    %26 = "top.Weight"() : () -> tensor<64xf32> loc(#loc26)
    %27 = "top.Conv"(%24, %25, %26) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<64x32x3x3xf32>, tensor<64xf32>) -> tensor<*xf32> loc(#loc27)
    %28 = "top.Mul"(%27, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc28)
    %29 = "top.Relu"(%28) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc29)
    %30 = "top.Mul"(%29, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc30)
    %31 = "top.Interp"(%30, %0) {coord_mode = "half_pixel", mode = "linear", scale_h = 2.000000e+00 : f64, scale_w = 2.000000e+00 : f64} : (tensor<*xf32>, none) -> tensor<*xf32> loc(#loc31)
    %32 = "top.Weight"() : () -> tensor<32x64x3x3xf32> loc(#loc32)
    %33 = "top.Weight"() : () -> tensor<32xf32> loc(#loc33)
    %34 = "top.Conv"(%31, %32, %33) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<32x64x3x3xf32>, tensor<32xf32>) -> tensor<*xf32> loc(#loc34)
    %35 = "top.Mul"(%34, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc35)
    %36 = "top.Relu"(%35) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc36)
    %37 = "top.Mul"(%36, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc37)
    %38 = "top.Concat"(%37, %23) {axis = 1 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32> loc(#loc38)
    %39 = "top.Weight"() : () -> tensor<32x64x3x3xf32> loc(#loc39)
    %40 = "top.Weight"() : () -> tensor<32xf32> loc(#loc40)
    %41 = "top.Conv"(%38, %39, %40) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<32x64x3x3xf32>, tensor<32xf32>) -> tensor<*xf32> loc(#loc41)
    %42 = "top.Mul"(%41, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc42)
    %43 = "top.Relu"(%42) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc43)
    %44 = "top.Mul"(%43, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc44)
    %45 = "top.Interp"(%44, %0) {coord_mode = "half_pixel", mode = "linear", scale_h = 2.000000e+00 : f64, scale_w = 2.000000e+00 : f64} : (tensor<*xf32>, none) -> tensor<*xf32> loc(#loc45)
    %46 = "top.Weight"() : () -> tensor<8x32x3x3xf32> loc(#loc46)
    %47 = "top.Weight"() : () -> tensor<8xf32> loc(#loc47)
    %48 = "top.Conv"(%45, %46, %47) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<8x32x3x3xf32>, tensor<8xf32>) -> tensor<*xf32> loc(#loc48)
    %49 = "top.Mul"(%48, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc49)
    %50 = "top.Relu"(%49) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc50)
    %51 = "top.Mul"(%50, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc51)
    %52 = "top.Concat"(%51, %16) {axis = 1 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32> loc(#loc52)
    %53 = "top.Weight"() : () -> tensor<8x16x3x3xf32> loc(#loc53)
    %54 = "top.Weight"() : () -> tensor<8xf32> loc(#loc54)
    %55 = "top.Conv"(%52, %53, %54) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<8x16x3x3xf32>, tensor<8xf32>) -> tensor<*xf32> loc(#loc55)
    %56 = "top.Mul"(%55, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc56)
    %57 = "top.Relu"(%56) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc57)
    %58 = "top.Mul"(%57, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc58)
    %59 = "top.Interp"(%58, %0) {coord_mode = "half_pixel", mode = "linear", scale_h = 2.000000e+00 : f64, scale_w = 2.000000e+00 : f64} : (tensor<*xf32>, none) -> tensor<*xf32> loc(#loc59)
    %60 = "top.Weight"() : () -> tensor<4x8x3x3xf32> loc(#loc60)
    %61 = "top.Weight"() : () -> tensor<4xf32> loc(#loc61)
    %62 = "top.Conv"(%59, %60, %61) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<4x8x3x3xf32>, tensor<4xf32>) -> tensor<*xf32> loc(#loc62)
    %63 = "top.Mul"(%62, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc63)
    %64 = "top.Relu"(%63) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc64)
    %65 = "top.Mul"(%64, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc65)
    %66 = "top.Concat"(%65, %9) {axis = 1 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<*xf32>, tensor<*xf32>) -> tensor<*xf32> loc(#loc66)
    %67 = "top.Weight"() : () -> tensor<16x8x3x3xf32> loc(#loc67)
    %68 = "top.Weight"() : () -> tensor<16xf32> loc(#loc68)
    %69 = "top.Conv"(%66, %67, %68) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [3, 3], pads = [1, 1, 1, 1], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<16x8x3x3xf32>, tensor<16xf32>) -> tensor<*xf32> loc(#loc69)
    %70 = "top.Mul"(%69, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc70)
    %71 = "top.Relu"(%70) {relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>) -> tensor<*xf32> loc(#loc71)
    %72 = "top.Mul"(%71, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc72)
    %73 = "top.Weight"() : () -> tensor<1x16x1x1xf32> loc(#loc73)
    %74 = "top.Weight"() : () -> tensor<1xf32> loc(#loc74)
    %75 = "top.Conv"(%72, %73, %74) {auto_pad = "NOTSET", dilations = [1, 1], do_relu = false, dynweight_reorderd = false, group = 1 : i64, kernel_shape = [1, 1], pads = [0, 0, 0, 0], relu_limit = -1.000000e+00 : f64, strides = [1, 1], weight_is_coeff = 1 : i64} : (tensor<*xf32>, tensor<1x16x1x1xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc75)
    %76 = "top.Mul"(%75, %5) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc76)
    %77 = "top.Mul"(%76, %8) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<*xf32>, tensor<1xf32>) -> tensor<*xf32> loc(#loc77)
    return %77 : tensor<*xf32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("input")
#loc2 = loc("253")
#loc3 = loc("255")
#loc4 = loc("/enc1/Conv_output_0_Conv")
#loc5 = loc("/enc1/calc_out_scale/Exp_output_0")
#loc6 = loc("/enc1/scale/Mul_output_0_Mul")
#loc7 = loc("/enc1/activate/Relu_output_0_Relu")
#loc8 = loc("/enc1/Pow_output_0")
#loc9 = loc("/enc1/Mul_output_0_Mul")
#loc10 = loc("/enc2/pool/MaxPool_output_0_MaxPool")
#loc11 = loc("257")
#loc12 = loc("259")
#loc13 = loc("/enc2/Conv_output_0_Conv")
#loc14 = loc("/enc2/scale/Mul_output_0_Mul")
#loc15 = loc("/enc2/activate/Relu_output_0_Relu")
#loc16 = loc("/enc2/Mul_output_0_Mul")
#loc17 = loc("/enc3/pool/MaxPool_output_0_MaxPool")
#loc18 = loc("261")
#loc19 = loc("263")
#loc20 = loc("/enc3/Conv_output_0_Conv")
#loc21 = loc("/enc3/scale/Mul_output_0_Mul")
#loc22 = loc("/enc3/activate/Relu_output_0_Relu")
#loc23 = loc("/enc3/Mul_output_0_Mul")
#loc24 = loc("/bneck/pool/MaxPool_output_0_MaxPool")
#loc25 = loc("265")
#loc26 = loc("267")
#loc27 = loc("/bneck/Conv_output_0_Conv")
#loc28 = loc("/bneck/scale/Mul_output_0_Mul")
#loc29 = loc("/bneck/activate/Relu_output_0_Relu")
#loc30 = loc("/bneck/Mul_output_0_Mul")
#loc31 = loc("/Resize_output_0_Resize")
#loc32 = loc("269")
#loc33 = loc("271")
#loc34 = loc("/upconv3/Conv_output_0_Conv")
#loc35 = loc("/upconv3/scale/Mul_output_0_Mul")
#loc36 = loc("/upconv3/activate/Relu_output_0_Relu")
#loc37 = loc("/upconv3/Mul_output_0_Mul")
#loc38 = loc("/Concat_output_0_Concat")
#loc39 = loc("273")
#loc40 = loc("275")
#loc41 = loc("/dec3/Conv_output_0_Conv")
#loc42 = loc("/dec3/scale/Mul_output_0_Mul")
#loc43 = loc("/dec3/activate/Relu_output_0_Relu")
#loc44 = loc("/dec3/Mul_output_0_Mul")
#loc45 = loc("/Resize_1_output_0_Resize")
#loc46 = loc("277")
#loc47 = loc("279")
#loc48 = loc("/upconv2/Conv_output_0_Conv")
#loc49 = loc("/upconv2/scale/Mul_output_0_Mul")
#loc50 = loc("/upconv2/activate/Relu_output_0_Relu")
#loc51 = loc("/upconv2/Mul_output_0_Mul")
#loc52 = loc("/Concat_1_output_0_Concat")
#loc53 = loc("281")
#loc54 = loc("283")
#loc55 = loc("/dec2/Conv_output_0_Conv")
#loc56 = loc("/dec2/scale/Mul_output_0_Mul")
#loc57 = loc("/dec2/activate/Relu_output_0_Relu")
#loc58 = loc("/dec2/Mul_output_0_Mul")
#loc59 = loc("/Resize_2_output_0_Resize")
#loc60 = loc("285")
#loc61 = loc("287")
#loc62 = loc("/upconv1/Conv_output_0_Conv")
#loc63 = loc("/upconv1/scale/Mul_output_0_Mul")
#loc64 = loc("/upconv1/activate/Relu_output_0_Relu")
#loc65 = loc("/upconv1/Mul_output_0_Mul")
#loc66 = loc("/Concat_2_output_0_Concat")
#loc67 = loc("289")
#loc68 = loc("291")
#loc69 = loc("/dec1/Conv_output_0_Conv")
#loc70 = loc("/dec1/scale/Mul_output_0_Mul")
#loc71 = loc("/dec1/activate/Relu_output_0_Relu")
#loc72 = loc("/dec1/Mul_output_0_Mul")
#loc73 = loc("293")
#loc74 = loc("295")
#loc75 = loc("/conv/Conv_output_0_Conv")
#loc76 = loc("/conv/scale/Mul_output_0_Mul")
#loc77 = loc("output_Mul")
