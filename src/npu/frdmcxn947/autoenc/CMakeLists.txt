# CROSS COMPILER SETTING
SET(CMAKE_SYSTEM_NAME Generic)
CMAKE_MINIMUM_REQUIRED (VERSION 3.10.0)

# THE VERSION NUMBER
SET (Tutorial_VERSION_MAJOR 1)
SET (Tutorial_VERSION_MINOR 0)

if (DEFINED ENV{SdkRootDirPath})
	SET(SdkRootDirPath "$ENV{SdkRootDirPath}")
endif()

if (NOT DEFINED SdkRootDirPath)
	MESSAGE(FATAL_ERROR "SDK path could not be determined. Please update SdkRootDirPath value from your CMake presets file(s).")
endif()

# ENABLE ASM
ENABLE_LANGUAGE(ASM)

# RESET FLAG VALUES
SET(CMAKE_ASM_FLAGS_DEBUG "")
SET(CMAKE_ASM_FLAGS_RELEASE "")
SET(CMAKE_C_FLAGS_DEBUG "")
SET(CMAKE_C_FLAGS_RELEASE "")
SET(CMAKE_CXX_FLAGS_DEBUG "")
SET(CMAKE_CXX_FLAGS_RELEASE "")
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "")
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "")

SET(CMAKE_STATIC_LIBRARY_PREFIX)
SET(CMAKE_STATIC_LIBRARY_SUFFIX)

SET(CMAKE_EXECUTABLE_LIBRARY_PREFIX)
SET(CMAKE_EXECUTABLE_LIBRARY_SUFFIX)

# CURRENT DIRECTORY
SET(ProjDirPath ${CMAKE_CURRENT_SOURCE_DIR})

SET(EXECUTABLE_OUTPUT_PATH ${ProjDirPath}/${CMAKE_BUILD_TYPE})
SET(LIBRARY_OUTPUT_PATH ${ProjDirPath}/${CMAKE_BUILD_TYPE})

set(CMAKE_USER_MAKE_RULES_OVERRIDE "user_override.cmake")

project(autoenc)
set(MCUX_SDK_PROJECT_NAME autoenc.elf)

include(${ProjDirPath}/flags.cmake)

add_executable(${MCUX_SDK_PROJECT_NAME} "${ProjDirPath}/component/uart/fsl_adapter_uart.h"
"${ProjDirPath}/component/uart/fsl_adapter_lpuart.c"
"${ProjDirPath}/component/lists/fsl_component_generic_list.h"
"${ProjDirPath}/component/lists/fsl_component_generic_list.c"
"${ProjDirPath}/startup/startup_mcxn947_cm33_core0.cpp"
"${ProjDirPath}/startup/boot_multicore_slave.h"
"${ProjDirPath}/startup/boot_multicore_slave.c"
"${ProjDirPath}/CMSIS/tz_context.h"
"${ProjDirPath}/CMSIS/mpu_armv8.h"
"${ProjDirPath}/CMSIS/core_cm33.h"
"${ProjDirPath}/CMSIS/cmsis_version.h"
"${ProjDirPath}/CMSIS/cmsis_gcc.h"
"${ProjDirPath}/CMSIS/cmsis_compiler.h"
"${ProjDirPath}/source/timer.h"
"${ProjDirPath}/source/timer.c"
"${ProjDirPath}/source/semihost_hardfault.c"
"${ProjDirPath}/source/main.cpp"
"${ProjDirPath}/source/infer.cpp"
"${ProjDirPath}/source/model/model_ops_npu.cpp"
"${ProjDirPath}/source/model/model_data.s"
"${ProjDirPath}/source/model/model.h"
"${ProjDirPath}/source/model/model.cpp"
"${ProjDirPath}/utilities/fsl_str.h"
"${ProjDirPath}/utilities/fsl_str.c"
"${ProjDirPath}/utilities/fsl_memcpy.S"
"${ProjDirPath}/utilities/fsl_debug_console.h"
"${ProjDirPath}/utilities/fsl_debug_console.c"
"${ProjDirPath}/utilities/fsl_assert.c"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/portable_type_to_tflitetype.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/context_util.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/builtin_ops.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/builtin_op_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/window.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/square_root.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/rfft.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/pcan_argc_fixed.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/overlap_add.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/msb.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/max_abs.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/log.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/irfft.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/filter_bank_square_root.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/filter_bank_spectral_subtraction.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/filter_bank_log.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/filter_bank.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/fft_auto_scale.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/energy.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/complex.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/circular_buffer.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/schema/schema_utils.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/schema/schema_generated.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/padding.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/op_macros.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/kernel_util.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/core/macros.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/test_helpers.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/test_helper_custom_ops.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/system_setup.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/recording_micro_interpreter.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/recording_micro_allocator.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/mock_micro_graph.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_utils.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_time.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_resource_variable.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_profiler_interface.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_profiler.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_op_resolver.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_mutable_op_resolver.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_log.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_interpreter_graph.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_interpreter_context.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_interpreter.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_graph.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_context.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_common.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_arena_constants.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_allocator.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/micro_allocation_info.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/memory_helpers.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/flatbuffer_utils.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/fake_micro_context.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/debug_log.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/debug_log.cpp"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/compatibility.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/c/common.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/c/c_api_types.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/c/builtin_op_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/gemmlowp/internal/detect_platform.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/gemmlowp/fixedpoint/fixedpoint_sse.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/gemmlowp/fixedpoint/fixedpoint_neon.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/gemmlowp/fixedpoint/fixedpoint.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/window_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/stacker_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/rfft.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/pcan_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/overlap_add_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/irfft.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/framer_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/filter_bank_spectral_subtraction_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/filter_bank_log_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/filter_bank_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/fft_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/energy_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/micro/kernels/delay_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/kiss_fft_wrappers/kiss_fft_int32.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/kiss_fft_wrappers/kiss_fft_int16.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/kiss_fft_wrappers/kiss_fft_float.h"
"${ProjDirPath}/eiq/tensorflow-lite/signal/src/kiss_fft_wrappers/kiss_fft_common.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/types.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/tensor_ctypes.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/strided_slice_logic.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/runtime_shape.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/quantization_util.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/portable_tensor_utils.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/portable_tensor.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/min.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/max.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/cppmath.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/compatibility.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/common.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/core/c/common.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/core/c/c_api_types.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/core/c/builtin_op_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/core/api/tensor_utils.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/core/api/flatbuffer_conversions.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/core/api/error_reporter.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/tflite_bridge/micro_error_reporter.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/tflite_bridge/flatbuffer_conversions_bridge.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/memory_planner/non_persistent_buffer_planner_shim.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/memory_planner/micro_memory_planner.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/memory_planner/memory_plan_struct.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/memory_planner/linear_memory_planner.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/memory_planner/greedy_memory_planner.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/arena_allocator/single_arena_buffer_allocator.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/arena_allocator/recording_single_arena_buffer_allocator.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/arena_allocator/persistent_arena_buffer_allocator.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/arena_allocator/non_persistent_arena_buffer_allocator.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/arena_allocator/ibuffer_allocator.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/unidirectional_sequence_lstm.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/svdf.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/sub.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/strided_slice.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/softmax.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/reshape.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/reduce.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/quantize.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/prelu.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/pooling.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/pad.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/mul.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/micro_tensor_utils.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/micro_ops.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/lstm_shared.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/lstm_eval_test.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/lstm_eval.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/logistic.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/logical.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/leaky_relu.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/kernel_util.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/kernel_runner.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/hard_swish.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/fully_connected.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/ethosu.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/detection_postprocess_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/dequantize.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/depthwise_conv.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/conv_test.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/conv.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/circular_buffer_flexbuffers_generated_data.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/circular_buffer.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/add.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/activations.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/activation_utils.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/ruy/ruy/profiler/instrumentation.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/neutron/driver/include/NeutronDriver.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/neutron/common/include/NeutronErrors.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/verifier.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/vector_downward.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/vector.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/util.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/table.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/struct.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/strings.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/stl_emulation.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/flexbuffers.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/flatbuffers.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/flatbuffer_builder.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/detached_buffer.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/default_allocator.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/buffer_ref.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/buffer.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/base.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/array.h"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers/allocator.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/optimized/neon_check.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/transpose_conv.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/transpose.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/tanh.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/sub.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/strided_slice.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/space_to_depth.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/space_to_batch_nd.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/softmax.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/slice.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/select.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/round.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/resize_nearest_neighbor.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/resize_bilinear.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/requantize.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/reduce.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/quantize.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/process_broadcast_shapes.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/prelu.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/portable_tensor_utils_impl.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/portable_tensor_utils.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/pooling.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/pad.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/neg.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/mul.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/maximum_minimum.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/lstm_cell.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/logistic.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/log_softmax.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/leaky_relu.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/l2normalization.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/hard_swish.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/fully_connected.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/floor_mod.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/floor_div.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/floor.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/fill.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/exp.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/elu.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/div.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/dequantize.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/depthwiseconv_uint8.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/depthwiseconv_float.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/depth_to_space.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/cumsum.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/conv.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/concatenation.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/comparisons.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/ceil.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/broadcast_to.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/broadcast_args.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/binary_function.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/batch_to_space_nd.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/batch_matmul.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/arg_min_max.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/add_n.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/add.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/neutron/neutron.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/neutron/neutron.cpp"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/transpose_conv.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/tanh.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/pooling.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/mul.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/mean.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/logistic.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/l2normalization.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/fully_connected.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/depthwise_conv.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/conv.h"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/kernels/internal/reference/integer_ops/add.h"
"${ProjDirPath}/drivers/fsl_spc.h"
"${ProjDirPath}/drivers/fsl_spc.c"
"${ProjDirPath}/drivers/fsl_smartdma.h"
"${ProjDirPath}/drivers/fsl_smartdma.c"
"${ProjDirPath}/drivers/fsl_reset.h"
"${ProjDirPath}/drivers/fsl_reset.c"
"${ProjDirPath}/drivers/fsl_port.h"
"${ProjDirPath}/drivers/fsl_lpuart.h"
"${ProjDirPath}/drivers/fsl_lpuart.c"
"${ProjDirPath}/drivers/fsl_lpi2c.h"
"${ProjDirPath}/drivers/fsl_lpi2c.c"
"${ProjDirPath}/drivers/fsl_lpflexcomm.h"
"${ProjDirPath}/drivers/fsl_lpflexcomm.c"
"${ProjDirPath}/drivers/fsl_inputmux_connections.h"
"${ProjDirPath}/drivers/fsl_inputmux.h"
"${ProjDirPath}/drivers/fsl_inputmux.c"
"${ProjDirPath}/drivers/fsl_gpio.h"
"${ProjDirPath}/drivers/fsl_gpio.c"
"${ProjDirPath}/drivers/fsl_flexio_mculcd_edma.h"
"${ProjDirPath}/drivers/fsl_flexio_mculcd_edma.c"
"${ProjDirPath}/drivers/fsl_flexio_mculcd.h"
"${ProjDirPath}/drivers/fsl_flexio_mculcd.c"
"${ProjDirPath}/drivers/fsl_flexio.h"
"${ProjDirPath}/drivers/fsl_flexio.c"
"${ProjDirPath}/drivers/fsl_edma_soc.h"
"${ProjDirPath}/drivers/fsl_edma_soc.c"
"${ProjDirPath}/drivers/fsl_edma_core.h"
"${ProjDirPath}/drivers/fsl_edma.h"
"${ProjDirPath}/drivers/fsl_edma.c"
"${ProjDirPath}/drivers/fsl_common_arm.h"
"${ProjDirPath}/drivers/fsl_common_arm.c"
"${ProjDirPath}/drivers/fsl_common.h"
"${ProjDirPath}/drivers/fsl_common.c"
"${ProjDirPath}/drivers/fsl_clock.h"
"${ProjDirPath}/drivers/fsl_clock.c"
"${ProjDirPath}/device/system_MCXN947_cm33_core0.h"
"${ProjDirPath}/device/system_MCXN947_cm33_core0.c"
"${ProjDirPath}/device/fsl_device_registers.h"
"${ProjDirPath}/device/MCXN947_cm33_core0_features.h"
"${ProjDirPath}/device/MCXN947_cm33_core0.h"
"${ProjDirPath}/board/pin_mux.h"
"${ProjDirPath}/board/pin_mux.c"
"${ProjDirPath}/board/clock_config.h"
"${ProjDirPath}/board/clock_config.c"
"${ProjDirPath}/board/board_init.h"
"${ProjDirPath}/board/board_init.c"
"${ProjDirPath}/board/board.h"
"${ProjDirPath}/board/board.c"
)




if(${LIBRARY_TYPE} STREQUAL "REDLIB")
    target_include_directories(${MCUX_SDK_PROJECT_NAME} PRIVATE $ENV{ARMGCC_DIR}/redlib/include)
endif()

set(c_include_directories "${ProjDirPath}/source"
"${ProjDirPath}/source/font"
"${ProjDirPath}/utilities"
"${ProjDirPath}/eiq/tensorflow-lite"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/gemmlowp"
"${ProjDirPath}/component/lists"
"${ProjDirPath}/component/uart"
"${ProjDirPath}/drivers"
"${ProjDirPath}/device"
"${ProjDirPath}/startup"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/neutron"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/ruy"
"${ProjDirPath}/CMSIS"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/neutron/common/include"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/neutron/driver/include"
"${ProjDirPath}/source/image"
"${ProjDirPath}/source/model"
"${ProjDirPath}/board"
"${ProjDirPath}/source/video"
)


target_include_directories(${MCUX_SDK_PROJECT_NAME} PRIVATE $<$<COMPILE_LANGUAGE:C>:${c_include_directories}>)

set(cpp_include_directories "${ProjDirPath}/source"
"${ProjDirPath}/source/video"
"${ProjDirPath}/utilities"
"${ProjDirPath}/eiq/tensorflow-lite"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/flatbuffers/include"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/gemmlowp"
"${ProjDirPath}/component/lists"
"${ProjDirPath}/component/uart"
"${ProjDirPath}/drivers"
"${ProjDirPath}/device"
"${ProjDirPath}/startup"
"${ProjDirPath}/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/neutron"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/ruy"
"${ProjDirPath}/CMSIS"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/neutron/common/include"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/neutron/driver/include"
"${ProjDirPath}/source/image"
"${ProjDirPath}/source/model"
"${ProjDirPath}/board"
)


target_include_directories(${MCUX_SDK_PROJECT_NAME} PRIVATE $<$<COMPILE_LANGUAGE:CXX>:${cpp_include_directories}>)

set(include_files "")


target_precompile_headers(${MCUX_SDK_PROJECT_NAME} PRIVATE ${include_files})

set(link_directories "${ProjDirPath}/eiq/tensorflow-lite/lib"
"${ProjDirPath}/eiq/tensorflow-lite/third_party/neutron"
)


set(link_libraries "tflm"
"NeutronDriver"
"NeutronFirmware"
)


target_link_directories(${MCUX_SDK_PROJECT_NAME} PRIVATE ${link_directories})
target_link_libraries(${MCUX_SDK_PROJECT_NAME} PRIVATE -Wl,--start-group)
target_link_libraries(${MCUX_SDK_PROJECT_NAME} PRIVATE ${TARGET_LINK_SYSTEM_LIBRARIES} ${link_libraries})
target_link_libraries(${MCUX_SDK_PROJECT_NAME} PRIVATE -Wl,--end-group)





